[{"path":"https://gosukehommaEX.github.io/BayesianQDM/articles/BayesianQDM.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Introduction to BayesianQDM","text":"BayesianQDM package provides comprehensive methods Bayesian quantitative decision-making clinical trials. vignette demonstrates basic functionality binary continuous endpoints.","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/articles/BayesianQDM.html","id":"decision-framework","dir":"Articles","previous_headings":"","what":"Decision Framework","title":"Introduction to BayesianQDM","text":"package implements three-zone decision framework: Go: Sufficient evidence proceed (high posterior probability) NoGo: Insufficient evidence (low posterior probability) Gray: Inconclusive evidence (intermediate probability)","code":""},{"path":[]},{"path":"https://gosukehommaEX.github.io/BayesianQDM/articles/BayesianQDM.html","id":"basic-example","dir":"Articles","previous_headings":"Binary Endpoints","what":"Basic Example","title":"Introduction to BayesianQDM","text":"","code":"# Calculate decision probabilities for binary endpoint result_binary <- pGNGsinglebinary(   prob = 'posterior',    design = 'controlled',    theta.TV = 0.3, theta.MAV = 0.1, theta.NULL = NULL,   gamma1 = 0.8, gamma2 = 0.2,   pi1 = c(0.3, 0.5, 0.7),    pi2 = rep(0.2, 3),    n1 = 15, n2 = 15,   a1 = 0.5, a2 = 0.5, b1 = 0.5, b2 = 0.5,   z = NULL, m1 = NULL, m2 = NULL,   ne1 = NULL, ne2 = NULL, ye1 = NULL, ye2 = NULL, ae1 = NULL, ae2 = NULL )  print(result_binary) #>   pi1 pi2         Go      Gray      NoGo #> 1 0.3 0.2 0.01578194 0.1810868 0.8031312 #> 2 0.5 0.2 0.21141006 0.4500322 0.3385577 #> 3 0.7 0.2 0.67440950 0.2761393 0.0494512"},{"path":"https://gosukehommaEX.github.io/BayesianQDM/articles/BayesianQDM.html","id":"posterior-probability","dir":"Articles","previous_headings":"Binary Endpoints","what":"Posterior Probability","title":"Introduction to BayesianQDM","text":"","code":"# Calculate posterior probability posterior_prob <- pPPsinglebinary(   prob = 'posterior',    design = 'controlled',    theta0 = 0.15,   n1 = 12, n2 = 15, y1 = 7, y2 = 5,    a1 = 0.5, a2 = 0.5, b1 = 0.5, b2 = 0.5,   m1 = NULL, m2 = NULL,   ne1 = NULL, ne2 = NULL, ye1 = NULL, ye2 = NULL, ae1 = NULL, ae2 = NULL )  cat(\"Posterior probability:\", round(posterior_prob, 4)) #> Posterior probability: 0.3139"},{"path":[]},{"path":"https://gosukehommaEX.github.io/BayesianQDM/articles/BayesianQDM.html","id":"basic-example-1","dir":"Articles","previous_headings":"Continuous Endpoints","what":"Basic Example","title":"Introduction to BayesianQDM","text":"","code":"# Calculate decision probabilities for continuous endpoint   result_continuous <- pGNGsinglecontinuous(   nsim = 50,  # Small nsim for vignette speed   prob = 'posterior',    design = 'controlled',    prior = 'vague',    CalcMethod = 'WS',  # Fast method for vignette   theta.TV = 1.5, theta.MAV = 0.5, theta.NULL = NULL,   nMC = NULL, gamma1 = 0.8, gamma2 = 0.3,   n1 = 12, n2 = 12, m1 = NULL, m2 = NULL,   kappa01 = NULL, kappa02 = NULL, nu01 = NULL, nu02 = NULL,   mu01 = NULL, mu02 = NULL, sigma01 = NULL, sigma02 = NULL,   mu1 = 4.5, mu2 = 2.0, sigma1 = 1.5, sigma2 = 1.3,   r = NULL, ne1 = NULL, ne2 = NULL, alpha01 = NULL, alpha02 = NULL,   bar.ye1 = NULL, bar.ye2 = NULL, se1 = NULL, se2 = NULL,   seed = 123 )  print(result_continuous) #>   mu1 mu2   Go Gray NoGo #> 1 4.5   2 0.82 0.18    0"},{"path":"https://gosukehommaEX.github.io/BayesianQDM/articles/BayesianQDM.html","id":"comparing-calculation-methods","dir":"Articles","previous_headings":"Continuous Endpoints","what":"Comparing Calculation Methods","title":"Introduction to BayesianQDM","text":"","code":"# Compare NI and WS methods prob_ni <- pPPsinglecontinuous(   prob = 'posterior', design = 'controlled', prior = 'vague', CalcMethod = 'NI',   theta0 = 1, n1 = 12, n2 = 12, bar.y1 = 3, bar.y2 = 1, s1 = 1.5, s2 = 1.2 )  prob_ws <- pPPsinglecontinuous(   prob = 'posterior', design = 'controlled', prior = 'vague', CalcMethod = 'WS',   theta0 = 1, n1 = 12, n2 = 12, bar.y1 = 3, bar.y2 = 1, s1 = 1.5, s2 = 1.2 )  cat(\"NI method:\", round(prob_ni, 4), \"\\n\") #> NI method: 0.0503 cat(\"WS method:\", round(prob_ws, 4), \"\\n\") #> WS method: 0.0429 cat(\"Difference:\", round(abs(prob_ni - prob_ws), 4), \"\\n\") #> Difference: 0.0074"},{"path":"https://gosukehommaEX.github.io/BayesianQDM/articles/BayesianQDM.html","id":"study-designs","dir":"Articles","previous_headings":"","what":"Study Designs","title":"Introduction to BayesianQDM","text":"package supports three study designs: Controlled Design: Standard two-arm randomized trial Uncontrolled Design: Single-arm historical control External Control Design: Incorporating historical data power priors","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/articles/BayesianQDM.html","id":"external-control-example","dir":"Articles","previous_headings":"Study Designs","what":"External Control Example","title":"Introduction to BayesianQDM","text":"","code":"# Binary endpoint with external control data external_binary <- pPPsinglebinary(   prob = 'posterior',    design = 'external',    theta0 = 0.15,   n1 = 20, n2 = 20, y1 = 12, y2 = 8,   a1 = 0.5, a2 = 0.5, b1 = 0.5, b2 = 0.5,   m1 = NULL, m2 = NULL,   ne1 = 15, ne2 = 25, ye1 = 9, ye2 = 10, ae1 = 0.5, ae2 = 0.5 )  cat(\"Posterior probability with external data:\", round(external_binary, 4), \"\\n\") #> Posterior probability with external data: 0.3579  # Continuous endpoint with external control data external_continuous <- pPPsinglecontinuous(   prob = 'posterior',   design = 'external',   prior = 'vague',   CalcMethod = 'WS',   theta0 = 1.5,   n1 = 20, n2 = 20,   bar.y1 = 5.5, bar.y2 = 3.2,   s1 = 2.1, s2 = 1.9,   ne1 = NULL, ne2 = 40,   alpha01 = NULL, alpha02 = 0.5,   bar.ye1 = NULL, bar.ye2 = 3.0,   se1 = NULL, se2 = 2.0 )  cat(\"Posterior probability with external control:\", round(external_continuous, 4), \"\\n\") #> Posterior probability with external control: 0.0581"},{"path":"https://gosukehommaEX.github.io/BayesianQDM/articles/BayesianQDM.html","id":"next-steps","dir":"Articles","previous_headings":"","what":"Next Steps","title":"Introduction to BayesianQDM","text":"detailed examples advanced usage: See vignette(\"binary-endpoints\") comprehensive binary endpoint examples See vignette(\"continuous-endpoints\") detailed continuous endpoint analysis Visit package website additional resources","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/articles/BayesianQDM.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Introduction to BayesianQDM","text":"theoretical background methodology details, please refer function documentation vignettes package.","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/articles/binary-endpoints.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Bayesian Decision Making for Binary Endpoints","text":"BayesianQDM package provides comprehensive methods Bayesian quantitative decision-making clinical trials binary endpoints. vignette demonstrates use package calculating posterior probabilities, posterior predictive probabilities, Go/NoGo/Gray decision probabilities.","code":""},{"path":[]},{"path":"https://gosukehommaEX.github.io/BayesianQDM/articles/binary-endpoints.html","id":"decision-framework","dir":"Articles","previous_headings":"Basic Concepts","what":"Decision Framework","title":"Bayesian Decision Making for Binary Endpoints","text":"Bayesian decision-making framework categorizes trial outcomes three zones: Go: Evidence suggests treatment effective (proceed next phase) NoGo: Evidence suggests treatment effective (stop development) Gray: Evidence inconclusive (may need additional data)","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/articles/binary-endpoints.html","id":"probability-types","dir":"Articles","previous_headings":"Basic Concepts","what":"Probability Types","title":"Bayesian Decision Making for Binary Endpoints","text":"Two types probabilities can calculated: Posterior Probability: P(θ>θ0|data)P(\\theta > \\theta_0 | data) θ\\theta treatment effect Posterior Predictive Probability: P(future trial show θ>θ0|current data)P(\\text{future trial show } \\theta > \\theta_0 | \\text{current data})","code":""},{"path":[]},{"path":"https://gosukehommaEX.github.io/BayesianQDM/articles/binary-endpoints.html","id":"posterior-probability","dir":"Articles","previous_headings":"Basic Examples","what":"Posterior Probability","title":"Bayesian Decision Making for Binary Endpoints","text":"","code":"# Calculate posterior probability for a controlled design posterior_prob <- pPPsinglebinary(   prob = 'posterior',    design = 'controlled',    theta0 = 0.15,   n1 = 20, n2 = 20, y1 = 12, y2 = 8,   a1 = 0.5, a2 = 0.5, b1 = 0.5, b2 = 0.5,   m1 = NULL, m2 = NULL,   ne1 = NULL, ne2 = NULL, ye1 = NULL, ye2 = NULL, ae1 = NULL, ae2 = NULL )  cat(\"Posterior probability that treatment effect > 0.15:\", round(posterior_prob, 4)) #> Posterior probability that treatment effect > 0.15: 0.3871"},{"path":"https://gosukehommaEX.github.io/BayesianQDM/articles/binary-endpoints.html","id":"posterior-predictive-probability","dir":"Articles","previous_headings":"Basic Examples","what":"Posterior Predictive Probability","title":"Bayesian Decision Making for Binary Endpoints","text":"","code":"# Calculate posterior predictive probability predictive_prob <- pPPsinglebinary(   prob = 'predictive',    design = 'controlled',    theta0 = 0.15,   n1 = 20, n2 = 20, y1 = 12, y2 = 8,   a1 = 0.5, a2 = 0.5, b1 = 0.5, b2 = 0.5,   m1 = 50, m2 = 50,   ne1 = NULL, ne2 = NULL, ye1 = NULL, ye2 = NULL, ae1 = NULL, ae2 = NULL )  cat(\"Predictive probability for future trial:\", round(predictive_prob, 4)) #> Predictive probability for future trial: 0.4035"},{"path":[]},{"path":"https://gosukehommaEX.github.io/BayesianQDM/articles/binary-endpoints.html","id":"basic-usage","dir":"Articles","previous_headings":"Go/NoGo/Gray Decision Probabilities","what":"Basic Usage","title":"Bayesian Decision Making for Binary Endpoints","text":"","code":"# Calculate Go/NoGo/Gray probabilities result <- pGNGsinglebinary(   prob = 'posterior',    design = 'controlled',   theta.TV = 0.3, theta.MAV = 0.1, theta.NULL = NULL,   gamma1 = 0.8, gamma2 = 0.2,   pi1 = c(0.3, 0.5, 0.7),    pi2 = rep(0.2, 3),   n1 = 20, n2 = 20,   a1 = 0.5, a2 = 0.5, b1 = 0.5, b2 = 0.5,   z = NULL, m1 = NULL, m2 = NULL,   ne1 = NULL, ne2 = NULL, ye1 = NULL, ye2 = NULL, ae1 = NULL, ae2 = NULL )  print(result) #>   pi1 pi2          Go      Gray       NoGo #> 1 0.3 0.2 0.007803538 0.1821623 0.81003417 #> 2 0.5 0.2 0.192004138 0.5121603 0.29583556 #> 3 0.7 0.2 0.716236863 0.2583638 0.02539935"},{"path":[]},{"path":"https://gosukehommaEX.github.io/BayesianQDM/articles/binary-endpoints.html","id":"evaluating-across-scenarios","dir":"Articles","previous_headings":"Operating Characteristics","what":"Evaluating Across Scenarios","title":"Bayesian Decision Making for Binary Endpoints","text":"","code":"# Evaluate operating characteristics across different response rates oc_results <- pGNGsinglebinary(   prob = 'posterior',    design = 'controlled',   theta.TV = 0.2, theta.MAV = 0.05, theta.NULL = NULL,   gamma1 = 0.8, gamma2 = 0.2,   pi1 = seq(0.2, 0.6, by = 0.1),    pi2 = rep(0.2, 5),   n1 = 25, n2 = 25,   a1 = 0.5, a2 = 0.5, b1 = 0.5, b2 = 0.5,   z = NULL, m1 = NULL, m2 = NULL,   ne1 = NULL, ne2 = NULL, ye1 = NULL, ye2 = NULL, ae1 = NULL, ae2 = NULL )  print(oc_results) #>   pi1 pi2          Go      Gray       NoGo #> 1 0.2 0.2 0.003871119 0.1008739 0.89525497 #> 2 0.3 0.2 0.048889816 0.2996013 0.65150893 #> 3 0.4 0.2 0.211943660 0.4198488 0.36820753 #> 4 0.5 0.2 0.489175480 0.3574133 0.15341120 #> 5 0.6 0.2 0.755770714 0.2030452 0.04118413"},{"path":"https://gosukehommaEX.github.io/BayesianQDM/articles/binary-endpoints.html","id":"visualizing-decision-probabilities","dir":"Articles","previous_headings":"Operating Characteristics","what":"Visualizing Decision Probabilities","title":"Bayesian Decision Making for Binary Endpoints","text":"","code":"# Reshape data for plotting plot_data <- oc_results %>%   select(pi1, pi2, Go, NoGo, Gray) %>%   pivot_longer(cols = c(Go, NoGo, Gray),                 names_to = \"Decision\",                 values_to = \"Probability\") %>%   mutate(TreatmentEffect = pi1 - pi2)  ggplot(plot_data, aes(x = TreatmentEffect, y = Probability, color = Decision, linetype = Decision)) +   geom_line(linewidth = 1.2) +   geom_point(size = 3) +   scale_color_manual(values = c(\"Go\" = \"#2E8B57\", \"Gray\" = \"#DAA520\", \"NoGo\" = \"#DC143C\")) +   scale_linetype_manual(values = c(\"Go\" = \"solid\", \"Gray\" = \"dashed\", \"NoGo\" = \"dotted\")) +   labs(     title = \"Operating Characteristics: Decision Probabilities\",     subtitle = \"Sample size = 25 per arm, Control rate = 20%\",     x = \"True Treatment Effect (π₁ - π₂)\",     y = \"Decision Probability\"   ) +   scale_y_continuous(limits = c(0, 1), labels = scales::percent) +   theme_minimal() +   theme(     plot.title = element_text(face = \"bold\", size = 14),     legend.position = \"bottom\"   )"},{"path":[]},{"path":"https://gosukehommaEX.github.io/BayesianQDM/articles/binary-endpoints.html","id":"controlled-design","dir":"Articles","previous_headings":"Study Designs","what":"Controlled Design","title":"Bayesian Decision Making for Binary Endpoints","text":"Standard two-arm randomized controlled trial.","code":"result_controlled <- pPPsinglebinary(   prob = 'posterior',    design = 'controlled',    theta0 = 0.15,   n1 = 20, n2 = 20, y1 = 12, y2 = 8,   a1 = 0.5, a2 = 0.5, b1 = 0.5, b2 = 0.5,   m1 = NULL, m2 = NULL,   ne1 = NULL, ne2 = NULL, ye1 = NULL, ye2 = NULL, ae1 = NULL, ae2 = NULL )  cat(\"Controlled design posterior probability:\", round(result_controlled, 4)) #> Controlled design posterior probability: 0.3871"},{"path":"https://gosukehommaEX.github.io/BayesianQDM/articles/binary-endpoints.html","id":"uncontrolled-design","dir":"Articles","previous_headings":"Study Designs","what":"Uncontrolled Design","title":"Bayesian Decision Making for Binary Endpoints","text":"Single-arm study historical control.","code":"result_uncontrolled <- pPPsinglebinary(   prob = 'posterior',    design = 'uncontrolled',    theta0 = 0.15,   n1 = 20, n2 = 20, y1 = 12, y2 = 4,  # y2 represents historical control response   a1 = 0.5, a2 = 0.5, b1 = 0.5, b2 = 0.5,   m1 = NULL, m2 = NULL,   ne1 = NULL, ne2 = NULL, ye1 = NULL, ye2 = NULL, ae1 = NULL, ae2 = NULL )  cat(\"Uncontrolled design posterior probability:\", round(result_uncontrolled, 4)) #> Uncontrolled design posterior probability: 0.0515"},{"path":"https://gosukehommaEX.github.io/BayesianQDM/articles/binary-endpoints.html","id":"external-control-design","dir":"Articles","previous_headings":"Study Designs","what":"External Control Design","title":"Bayesian Decision Making for Binary Endpoints","text":"Incorporating historical data power priors.","code":"# External control with 50% borrowing result_external <- pPPsinglebinary(   prob = 'posterior',    design = 'external',    theta0 = 0.15,   n1 = 20, n2 = 20, y1 = 12, y2 = 8,   a1 = 0.5, a2 = 0.5, b1 = 0.5, b2 = 0.5,   m1 = NULL, m2 = NULL,   ne1 = 15, ne2 = 25, ye1 = 9, ye2 = 10, ae1 = 0.5, ae2 = 0.5 )  cat(\"External control posterior probability:\", round(result_external, 4)) #> External control posterior probability: 0.3579"},{"path":"https://gosukehommaEX.github.io/BayesianQDM/articles/binary-endpoints.html","id":"sensitivity-to-power-prior-parameter","dir":"Articles","previous_headings":"Study Designs","what":"Sensitivity to Power Prior Parameter","title":"Bayesian Decision Making for Binary Endpoints","text":"","code":"# Evaluate sensitivity to borrowing parameter (varying both ae1 and ae2) alpha_values <- seq(0, 1, by = 0.2)  borrowing_results <- data.frame(   alpha = alpha_values,   probability = sapply(alpha_values, function(a) {     pPPsinglebinary(       prob = 'posterior', design = 'external', theta0 = 0.15,       n1 = 20, n2 = 20, y1 = 12, y2 = 8,       a1 = 0.5, a2 = 0.5, b1 = 0.5, b2 = 0.5,       m1 = NULL, m2 = NULL,       ne1 = 15, ne2 = 25, ye1 = 9, ye2 = 10, ae1 = a, ae2 = a     )   }) )  print(borrowing_results) #>   alpha probability #> 1   0.0   0.3870664 #> 2   0.2   0.3743445 #> 3   0.4   0.3630836 #> 4   0.6   0.3528975 #> 5   0.8   0.3435474 #> 6   1.0   0.3348736 ggplot(borrowing_results, aes(x = alpha, y = probability)) +   geom_line(linewidth = 1.2, color = '#2E8B57') +   geom_point(size = 3, color = '#2E8B57') +   labs(     title = \"Sensitivity to Historical Data Borrowing\",     x = \"Power Prior Parameter (α)\",     y = \"Posterior Probability\",     subtitle = \"α = 0: no borrowing, α = 1: full borrowing\"   ) +   scale_y_continuous(limits = c(0, 1), labels = scales::percent) +   theme_minimal() +   theme(plot.title = element_text(face = \"bold\"))"},{"path":[]},{"path":"https://gosukehommaEX.github.io/BayesianQDM/articles/binary-endpoints.html","id":"power-analysis","dir":"Articles","previous_headings":"Sample Size Considerations","what":"Power Analysis","title":"Bayesian Decision Making for Binary Endpoints","text":"","code":"# Evaluate power across different sample sizes sample_sizes <- seq(10, 50, by = 10)  power_results <- data.frame(   n = sample_sizes,   go_prob = sapply(sample_sizes, function(n) {     result <- pGNGsinglebinary(       prob = 'posterior', design = 'controlled',       theta.TV = 0.2, theta.MAV = 0.05, theta.NULL = NULL,       gamma1 = 0.8, gamma2 = 0.2,       pi1 = 0.5, pi2 = 0.3,  # Assume true effect of 0.2       n1 = n, n2 = n,       a1 = 0.5, a2 = 0.5, b1 = 0.5, b2 = 0.5,       z = NULL, m1 = NULL, m2 = NULL,       ne1 = NULL, ne2 = NULL, ye1 = NULL, ye2 = NULL, ae1 = NULL, ae2 = NULL     )     result$Go[1]   }) )  print(power_results) #>    n   go_prob #> 1 10 0.2447746 #> 2 20 0.2058666 #> 3 30 0.1762386 #> 4 40 0.2079638 #> 5 50 0.1775540 ggplot(power_results, aes(x = n, y = go_prob)) +   geom_line(linewidth = 1.2, color = '#2E8B57') +   geom_point(size = 3, color = '#2E8B57') +   geom_hline(yintercept = 0.8, linetype = \"dashed\", color = \"red\") +   annotate(\"text\", x = 45, y = 0.85, label = \"Target: 80%\", color = \"red\") +   labs(     title = \"Power Analysis: Sample Size vs Go Probability\",     x = \"Sample Size (per arm)\",     y = \"Go Probability\",     subtitle = \"True treatment effect = 20%\"   ) +   scale_y_continuous(limits = c(0, 1), labels = scales::percent) +   theme_minimal() +   theme(plot.title = element_text(face = \"bold\"))"},{"path":[]},{"path":"https://gosukehommaEX.github.io/BayesianQDM/articles/binary-endpoints.html","id":"threshold-selection","dir":"Articles","previous_headings":"Practical Guidelines","what":"Threshold Selection","title":"Bayesian Decision Making for Binary Endpoints","text":"designing trial, consider: θ_TV (Target Value): Set based clinically meaningful difference θ_MAV (Minimum Acceptable Value): Set based smallest worthwhile effect γ₁ (Go threshold): Typically 0.8-0.9 high confidence γ₂ (NoGo threshold): Typically 0.2-0.3 early stopping","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/articles/binary-endpoints.html","id":"prior-selection","dir":"Articles","previous_headings":"Practical Guidelines","what":"Prior Selection","title":"Bayesian Decision Making for Binary Endpoints","text":"Weakly informative: Beta(0.5, 0.5) - Jeffreys prior Uniform: Beta(1, 1) - uniform prior Informative: Beta(, b) based historical data expert opinion","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/articles/binary-endpoints.html","id":"design-selection","dir":"Articles","previous_headings":"Practical Guidelines","what":"Design Selection","title":"Bayesian Decision Making for Binary Endpoints","text":"Controlled: Standard two-arm trial (common) Uncontrolled: Single-arm historical control well-established External: incorporating historical data via power priors","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/articles/binary-endpoints.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"Bayesian Decision Making for Binary Endpoints","text":"vignette demonstrated: Basic probability calculations binary endpoints Go/NoGo/Gray decision framework customizable thresholds Operating characteristics evaluation across scenarios External control design power priors Sample size considerations trial planning BayesianQDM package provides flexible tools evidence-based decision making clinical trials binary endpoints.","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/articles/binary-endpoints.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Bayesian Decision Making for Binary Endpoints","text":"details statistical methods, see: main BayesianQDM vignette framework overview Function documentation parameter specifications continuous endpoints vignette analysis continuous outcomes","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/articles/continuous-endpoints.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Bayesian Decision Making for Continuous Endpoints","text":"vignette demonstrates Bayesian decision-making continuous endpoints using BayesianQDM package. Continuous endpoints (e.g., change biomarker levels, symptom scores, quality life measures) common clinical trials require different statistical approaches binary endpoints.","code":""},{"path":[]},{"path":"https://gosukehommaEX.github.io/BayesianQDM/articles/continuous-endpoints.html","id":"statistical-framework","dir":"Articles","previous_headings":"Theoretical Background","what":"Statistical Framework","title":"Bayesian Decision Making for Continuous Endpoints","text":"continuous endpoints, assume: - Outcomes follow normal distributions unknown means variances - Prior distributions parameters (Normal-Inverse-Chi-squared vague priors) - Posterior distributions follow t-distributions","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/articles/continuous-endpoints.html","id":"calculation-methods","dir":"Articles","previous_headings":"Theoretical Background","what":"Calculation Methods","title":"Bayesian Decision Making for Continuous Endpoints","text":"package provides three computational approaches: NI (Numerical Integration): Exact calculation using convolution WS (Welch-Satterthwaite): Fast approximation unequal variances MC (Monte Carlo): Simulation-based approach vignette, focus fastest methods (NI WS) ensure reasonable build times.","code":""},{"path":[]},{"path":"https://gosukehommaEX.github.io/BayesianQDM/articles/continuous-endpoints.html","id":"posterior-probability","dir":"Articles","previous_headings":"Basic Examples","what":"Posterior Probability","title":"Bayesian Decision Making for Continuous Endpoints","text":"","code":"# Calculate posterior probability using NI method posterior_prob <- pPPsinglecontinuous(   prob = 'posterior',    design = 'controlled',    prior = 'vague',    CalcMethod = 'NI',   theta0 = 1.5,   n1 = 20, n2 = 20,    bar.y1 = 5.2, bar.y2 = 3.0,    s1 = 2.0, s2 = 1.8 )  cat(\"Posterior probability that treatment effect > 1.5:\", round(posterior_prob, 4)) #> Posterior probability that treatment effect > 1.5: 0.1323"},{"path":"https://gosukehommaEX.github.io/BayesianQDM/articles/continuous-endpoints.html","id":"comparing-calculation-methods","dir":"Articles","previous_headings":"Basic Examples","what":"Comparing Calculation Methods","title":"Bayesian Decision Making for Continuous Endpoints","text":"","code":"# Compare NI and WS methods prob_ni <- pPPsinglecontinuous(   prob = 'posterior', design = 'controlled', prior = 'vague', CalcMethod = 'NI',   theta0 = 1.5, n1 = 15, n2 = 15, bar.y1 = 5, bar.y2 = 3, s1 = 2, s2 = 2 )  prob_ws <- pPPsinglecontinuous(   prob = 'posterior', design = 'controlled', prior = 'vague', CalcMethod = 'WS',   theta0 = 1.5, n1 = 15, n2 = 15, bar.y1 = 5, bar.y2 = 3, s1 = 2, s2 = 2 )  cat(\"NI method:\", round(prob_ni, 4), \"\\n\") #> NI method: 0.2572 cat(\"WS method:\", round(prob_ws, 4), \"\\n\") #> WS method: 0.2496 cat(\"Difference:\", round(abs(prob_ni - prob_ws), 6), \"\\n\") #> Difference: 0.00763"},{"path":[]},{"path":"https://gosukehommaEX.github.io/BayesianQDM/articles/continuous-endpoints.html","id":"basic-usage","dir":"Articles","previous_headings":"Go/NoGo/Gray Decision Probabilities","what":"Basic Usage","title":"Bayesian Decision Making for Continuous Endpoints","text":"","code":"# Calculate Go/NoGo/Gray probabilities result <- pGNGsinglecontinuous(   nsim = 50,  # Small nsim for vignette speed   prob = 'posterior',    design = 'controlled',    prior = 'vague',    CalcMethod = 'WS',   theta.TV = 1.5, theta.MAV = 0.5, theta.NULL = NULL,   nMC = NULL, gamma1 = 0.8, gamma2 = 0.3,   n1 = 20, n2 = 20, m1 = NULL, m2 = NULL,   kappa01 = NULL, kappa02 = NULL, nu01 = NULL, nu02 = NULL,   mu01 = NULL, mu02 = NULL, sigma01 = NULL, sigma02 = NULL,   mu1 = 5.0, mu2 = 3.0, sigma1 = 2.0, sigma2 = 1.8,   r = NULL, ne1 = NULL, ne2 = NULL, alpha01 = NULL, alpha02 = NULL,   bar.ye1 = NULL, bar.ye2 = NULL, se1 = NULL, se2 = NULL,   seed = 123 )  print(result) #>   mu1 mu2   Go Gray NoGo #> 1   5   3 0.46 0.52 0.02"},{"path":[]},{"path":"https://gosukehommaEX.github.io/BayesianQDM/articles/continuous-endpoints.html","id":"evaluating-across-treatment-effects","dir":"Articles","previous_headings":"Operating Characteristics","what":"Evaluating Across Treatment Effects","title":"Bayesian Decision Making for Continuous Endpoints","text":"","code":"# Evaluate OC across different treatment effects mu1_values <- seq(3, 7, by = 1)  oc_results <- do.call(rbind, lapply(mu1_values, function(m1) {   result <- pGNGsinglecontinuous(     nsim = 30,  # Reduced for vignette speed     prob = 'posterior', design = 'controlled', prior = 'vague', CalcMethod = 'WS',     theta.TV = 1.5, theta.MAV = 0.5, theta.NULL = NULL,     nMC = NULL, gamma1 = 0.8, gamma2 = 0.3,     n1 = 30, n2 = 30, m1 = NULL, m2 = NULL,     kappa01 = NULL, kappa02 = NULL, nu01 = NULL, nu02 = NULL,     mu01 = NULL, mu02 = NULL, sigma01 = NULL, sigma02 = NULL,     mu1 = m1, mu2 = 3, sigma1 = 2, sigma2 = 2,     r = NULL, ne1 = NULL, ne2 = NULL, alpha01 = NULL, alpha02 = NULL,     bar.ye1 = NULL, bar.ye2 = NULL, se1 = NULL, se2 = NULL,     seed = 123   )      data.frame(     mu1 = m1,     treatment_effect = m1 - 3,     go_prob = result$Go,     nogo_prob = result$NoGo,     gray_prob = result$Gray   ) }))  print(oc_results) #>   mu1 treatment_effect   go_prob  nogo_prob  gray_prob #> 1   3                0 0.0000000 0.96666667 0.03333333 #> 2   4                1 0.0000000 0.23333333 0.76666667 #> 3   5                2 0.6000000 0.03333333 0.36666667 #> 4   6                3 0.9333333 0.00000000 0.06666667 #> 5   7                4 1.0000000 0.00000000 0.00000000"},{"path":"https://gosukehommaEX.github.io/BayesianQDM/articles/continuous-endpoints.html","id":"visualizing-operating-characteristics","dir":"Articles","previous_headings":"Operating Characteristics","what":"Visualizing Operating Characteristics","title":"Bayesian Decision Making for Continuous Endpoints","text":"","code":"# Reshape for plotting plot_data <- oc_results %>%   pivot_longer(cols = c(go_prob, gray_prob, nogo_prob),                 names_to = \"decision\",                 values_to = \"probability\") %>%   mutate(Decision = case_when(     decision == \"go_prob\" ~ \"Go\",     decision == \"gray_prob\" ~ \"Gray\",     decision == \"nogo_prob\" ~ \"NoGo\"   ))  ggplot(plot_data, aes(x = treatment_effect, y = probability, color = Decision, linetype = Decision)) +   geom_line(linewidth = 1.2) +   geom_point(size = 3) +   scale_color_manual(values = c(\"Go\" = \"#2E8B57\", \"Gray\" = \"#DAA520\", \"NoGo\" = \"#DC143C\")) +   scale_linetype_manual(values = c(\"Go\" = \"solid\", \"Gray\" = \"dashed\", \"NoGo\" = \"dotted\")) +   labs(     title = \"Operating Characteristics: Decision Probabilities\",     subtitle = \"Sample size = 30 per arm, σ = 2\",     x = \"True Treatment Effect (μ₁ - μ₂)\",     y = \"Decision Probability\",     color = \"Decision\"   ) +   scale_y_continuous(limits = c(0, 1), labels = scales::percent) +   theme_minimal() +   theme(     plot.title = element_text(face = \"bold\", size = 14),     legend.position = \"bottom\"   )"},{"path":[]},{"path":"https://gosukehommaEX.github.io/BayesianQDM/articles/continuous-endpoints.html","id":"informative-vs-vague-priors","dir":"Articles","previous_headings":"Prior Specification","what":"Informative vs Vague Priors","title":"Bayesian Decision Making for Continuous Endpoints","text":"","code":"# Vague prior prob_vague <- pPPsinglecontinuous(   prob = 'posterior', design = 'controlled', prior = 'vague', CalcMethod = 'NI',   theta0 = 1.5, n1 = 15, n2 = 15, bar.y1 = 5, bar.y2 = 3, s1 = 2, s2 = 2 )  # Informative prior (Normal-Inverse-Chi-squared) prob_informative <- pPPsinglecontinuous(   prob = 'posterior', design = 'controlled', prior = 'N-Inv-Chisq', CalcMethod = 'NI',   theta0 = 1.5, n1 = 15, n2 = 15,   kappa01 = 5, kappa02 = 5, nu01 = 10, nu02 = 10,   mu01 = 5, mu02 = 3, sigma01 = 2, sigma02 = 2,   bar.y1 = 5, bar.y2 = 3, s1 = 2, s2 = 2 )  cat(\"Vague prior:       \", round(prob_vague, 4), \"\\n\") #> Vague prior:        0.2572 cat(\"Informative prior: \", round(prob_informative, 4), \"\\n\") #> Informative prior:  0.4126"},{"path":[]},{"path":"https://gosukehommaEX.github.io/BayesianQDM/articles/continuous-endpoints.html","id":"power-prior-with-historical-data","dir":"Articles","previous_headings":"External Control Design","what":"Power Prior with Historical Data","title":"Bayesian Decision Making for Continuous Endpoints","text":"","code":"# Incorporating external control data external_result <- pPPsinglecontinuous(   prob = 'posterior',   design = 'external',   prior = 'vague',   CalcMethod = 'WS',   theta0 = 1.5,   n1 = 20, n2 = 20,           # Current trial   bar.y1 = 5.5, bar.y2 = 3.2,   s1 = 2.1, s2 = 1.9,   ne1 = NULL, ne2 = 40,       # External control only   alpha01 = NULL, alpha02 = 0.5,  # 50% borrowing   bar.ye1 = NULL, bar.ye2 = 3.0,  # Historical control mean   se1 = NULL, se2 = 2.0           # Historical control SD )  cat(\"Posterior probability with external control:\", round(external_result, 4)) #> Posterior probability with external control: 0.0581"},{"path":"https://gosukehommaEX.github.io/BayesianQDM/articles/continuous-endpoints.html","id":"sensitivity-to-power-prior-parameter","dir":"Articles","previous_headings":"External Control Design","what":"Sensitivity to Power Prior Parameter","title":"Bayesian Decision Making for Continuous Endpoints","text":"","code":"# Test different levels of borrowing alpha_values <- seq(0, 1, by = 0.2)  borrowing_results <- data.frame(   alpha = alpha_values,   probability = sapply(alpha_values, function(a) {     pPPsinglecontinuous(       prob = 'posterior', design = 'external', prior = 'vague', CalcMethod = 'WS',       theta0 = 1.5, n1 = 20, n2 = 20, bar.y1 = 5.5, bar.y2 = 3.2, s1 = 2.1, s2 = 1.9,       ne1 = NULL, ne2 = 40, alpha01 = NULL, alpha02 = a,       bar.ye1 = NULL, bar.ye2 = 3.0, se1 = NULL, se2 = 2.0     )   }) )  print(borrowing_results) #>   alpha probability #> 1   0.0  0.10459681 #> 2   0.2  0.07720469 #> 3   0.4  0.06291360 #> 4   0.6  0.05433216 #> 5   0.8  0.04867937 #> 6   1.0  0.04470432 ggplot(borrowing_results, aes(x = alpha, y = probability)) +   geom_line(linewidth = 1.2, color = '#2E8B57') +   geom_point(size = 3, color = '#2E8B57') +   labs(     title = \"Sensitivity to Historical Data Borrowing\",     x = \"Power Prior Parameter (α)\",     y = \"Posterior Probability\",     subtitle = \"α = 0: no borrowing, α = 1: full borrowing\"   ) +   scale_y_continuous(limits = c(0, 1), labels = scales::percent) +   theme_minimal() +   theme(plot.title = element_text(face = \"bold\"))"},{"path":[]},{"path":"https://gosukehommaEX.github.io/BayesianQDM/articles/continuous-endpoints.html","id":"power-analysis-across-sample-sizes","dir":"Articles","previous_headings":"Sample Size and Power","what":"Power Analysis Across Sample Sizes","title":"Bayesian Decision Making for Continuous Endpoints","text":"","code":"# Evaluate optimal sample size for desired operating characteristics sample_sizes <- seq(10, 50, by = 10)  oc_results_n <- do.call(rbind, lapply(sample_sizes, function(n) {   result <- pGNGsinglecontinuous(     nsim = 30,  # Reduced for vignette speed     prob = 'posterior', design = 'controlled', prior = 'vague', CalcMethod = 'WS',     theta.TV = 1.5, theta.MAV = 0.5, theta.NULL = NULL,     nMC = NULL, gamma1 = 0.8, gamma2 = 0.3,     n1 = n, n2 = n, m1 = NULL, m2 = NULL,     kappa01 = NULL, kappa02 = NULL, nu01 = NULL, nu02 = NULL,     mu01 = NULL, mu02 = NULL, sigma01 = NULL, sigma02 = NULL,     mu1 = 5, mu2 = 3,  # Assume true effect of 2.0     sigma1 = 2, sigma2 = 2,     r = NULL, ne1 = NULL, ne2 = NULL, alpha01 = NULL, alpha02 = NULL,     bar.ye1 = NULL, bar.ye2 = NULL, se1 = NULL, se2 = NULL,     seed = 123   )      data.frame(     sample_size = n,     go_prob = result$Go,     nogo_prob = result$NoGo,     gray_prob = result$Gray   ) }))  print(oc_results_n) #>   sample_size   go_prob  nogo_prob gray_prob #> 1          10 0.4000000 0.13333333 0.4666667 #> 2          20 0.4666667 0.00000000 0.5333333 #> 3          30 0.6000000 0.03333333 0.3666667 #> 4          40 0.6666667 0.00000000 0.3333333 #> 5          50 0.5666667 0.00000000 0.4333333 # Reshape for plotting power_plot_data <- oc_results_n %>%   pivot_longer(cols = c(go_prob, gray_prob, nogo_prob),                 names_to = \"decision\",                 values_to = \"probability\") %>%   mutate(Decision = case_when(     decision == \"go_prob\" ~ \"Go\",     decision == \"gray_prob\" ~ \"Gray\",     decision == \"nogo_prob\" ~ \"NoGo\"   ))  ggplot(power_plot_data, aes(x = sample_size, y = probability, color = Decision)) +   geom_line(linewidth = 1.2) +   geom_point(size = 3) +   scale_color_manual(values = c(\"Go\" = \"#2E8B57\", \"Gray\" = \"#DAA520\", \"NoGo\" = \"#DC143C\")) +   labs(     title = \"Power Analysis: Sample Size vs Decision Probability\",     x = \"Sample Size (per arm)\",     y = \"Decision Probability\",     subtitle = \"True treatment effect = 2.0, σ = 2\"   ) +   scale_y_continuous(limits = c(0, 1), labels = scales::percent) +   theme_minimal() +   theme(     plot.title = element_text(face = \"bold\", size = 14),     legend.position = \"bottom\"   )"},{"path":[]},{"path":"https://gosukehommaEX.github.io/BayesianQDM/articles/continuous-endpoints.html","id":"method-selection","dir":"Articles","previous_headings":"Practical Guidelines","what":"Method Selection","title":"Bayesian Decision Making for Continuous Endpoints","text":"NI (Numerical Integration) - accurate - Recommended final analyses regulatory submissions - Moderate computational time WS (Welch-Satterthwaite) - Fast approximation - Good exploratory analyses simulations - close NI results cases MC (Monte Carlo) - Flexible slowest - Use methods applicable - Requires careful selection nMC (typically 10,000+)","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/articles/continuous-endpoints.html","id":"design-selection","dir":"Articles","previous_headings":"Practical Guidelines","what":"Design Selection","title":"Bayesian Decision Making for Continuous Endpoints","text":"Controlled: Standard two-arm trial concurrent controls Uncontrolled: Single-arm ethical/practical constraints prevent randomization External: incorporating historical data can reduce sample size requirements","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/articles/continuous-endpoints.html","id":"threshold-selection","dir":"Articles","previous_headings":"Practical Guidelines","what":"Threshold Selection","title":"Bayesian Decision Making for Continuous Endpoints","text":"θ_TV (Target Value): Clinically meaningful difference θ_MAV (Minimum Acceptable Value): Smallest worthwhile effect γ₁ (Go threshold): 0.7-0.9 depending risk tolerance γ₂ (NoGo threshold): 0.2-0.4 early stopping","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/articles/continuous-endpoints.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"Bayesian Decision Making for Continuous Endpoints","text":"vignette demonstrated: Basic probability calculations continuous endpoints Method comparison (NI, WS, MC) Go/NoGo/Gray decision framework implementation Operating characteristics evaluation Prior specification (vague vs informative) External control design power priors Sample size power considerations BayesianQDM package provides flexible rigorous tools Bayesian decision-making clinical trials continuous endpoints.","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/articles/continuous-endpoints.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Bayesian Decision Making for Continuous Endpoints","text":"details statistical methods, see: main BayesianQDM vignette framework overview Function documentation parameter specifications binary endpoints vignette analysis discrete outcomes","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Gosuke Homma. Author, maintainer. Yusuke Yamaguchi. Author.","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Homma G, Yamaguchi Y (2025). BayesianQDM: Bayesian Quantitative Decision-Making Framework Binary Continuous Endpoints. R package version 0.1.0, https://gosukehommaEX.github.io/BayesianQDM/.","code":"@Manual{,   title = {BayesianQDM: Bayesian Quantitative Decision-Making Framework for Binary and Continuous Endpoints},   author = {Gosuke Homma and Yusuke Yamaguchi},   year = {2025},   note = {R package version 0.1.0},   url = {https://gosukehommaEX.github.io/BayesianQDM/}, }"},{"path":[]},{"path":"https://gosukehommaEX.github.io/BayesianQDM/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"BayesianQDM","text":"BayesianQDM provides comprehensive framework Bayesian Quantitative Decision-Making clinical trials. package enables researchers make Go/NoGo/Gray decisions using posterior predictive probabilities binary continuous endpoints.","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/index.html","id":"key-features","dir":"","previous_headings":"","what":"Key Features","title":"BayesianQDM","text":"✅ Multiple Study Designs: Controlled, uncontrolled, external control designs 📊 Flexible Endpoints: Support binary continuous outcomes 🔢 Multiple Calculation Methods: continuous endpoints (Numerical Integration, Monte Carlo, Welch-Satterthwaite) 🎯 Three-Zone Decision Framework: Go/NoGo/Gray probability calculation 📈 Power Priors: Incorporation historical/external data","code":""},{"path":[]},{"path":"https://gosukehommaEX.github.io/BayesianQDM/index.html","id":"from-cran","dir":"","previous_headings":"Installation","what":"From CRAN","title":"BayesianQDM","text":"","code":"install.packages(\"BayesianQDM\")"},{"path":"https://gosukehommaEX.github.io/BayesianQDM/index.html","id":"development-version","dir":"","previous_headings":"Installation","what":"Development Version","title":"BayesianQDM","text":"","code":"# install.packages(\"devtools\") devtools::install_github(\"gosukehommaEX/BayesianQDM\")"},{"path":[]},{"path":"https://gosukehommaEX.github.io/BayesianQDM/index.html","id":"binary-endpoint-example","dir":"","previous_headings":"Quick Start","what":"Binary Endpoint Example","title":"BayesianQDM","text":"","code":"library(BayesianQDM)  # Calculate Go/NoGo/Gray probabilities for binary endpoint result <- pGNGsinglebinary(   prob = 'posterior',    design = 'controlled',   theta.TV = 0.3, theta.MAV = 0.1, theta.NULL = NULL,   gamma1 = 0.8, gamma2 = 0.2,   pi1 = c(0.3, 0.5, 0.7),    pi2 = rep(0.2, 3),   n1 = 15, n2 = 15,   a1 = 0.5, a2 = 0.5, b1 = 0.5, b2 = 0.5,   z = NULL, m1 = NULL, m2 = NULL,   ne1 = NULL, ne2 = NULL, ye1 = NULL, ye2 = NULL, ae1 = NULL, ae2 = NULL )  print(result)"},{"path":"https://gosukehommaEX.github.io/BayesianQDM/index.html","id":"continuous-endpoint-example","dir":"","previous_headings":"Quick Start","what":"Continuous Endpoint Example","title":"BayesianQDM","text":"","code":"# Calculate Go/NoGo/Gray probabilities for continuous endpoint result <- pGNGsinglecontinuous(   nsim = 100,    prob = 'posterior',    design = 'controlled',    prior = 'vague',    CalcMethod = 'NI',   theta.TV = 1.5, theta.MAV = 0.5, theta.NULL = NULL,   nMC = NULL, gamma1 = 0.8, gamma2 = 0.3,   n1 = 15, n2 = 15, m1 = NULL, m2 = NULL,   kappa01 = NULL, kappa02 = NULL, nu01 = NULL, nu02 = NULL,   mu01 = NULL, mu02 = NULL, sigma01 = NULL, sigma02 = NULL,   mu1 = 4.0, mu2 = 2.0, sigma1 = 1.5, sigma2 = 1.3,   r = NULL, ne1 = NULL, ne2 = NULL, alpha01 = NULL, alpha02 = NULL,   bar.ye1 = NULL, bar.ye2 = NULL, se1 = NULL, se2 = NULL,   seed = 123 )  print(result)"},{"path":[]},{"path":"https://gosukehommaEX.github.io/BayesianQDM/index.html","id":"id_-vignettes","dir":"","previous_headings":"Documentation","what":"📚 Vignettes","title":"BayesianQDM","text":"package includes detailed vignettes practical examples: Introduction BayesianQDM: Overview quick start guide Binary Endpoints: Detailed examples binary outcome analysis Continuous Endpoints: Comprehensive guide continuous outcome analysis","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/index.html","id":"id_-function-documentation","dir":"","previous_headings":"Documentation","what":"📖 Function Documentation","title":"BayesianQDM","text":"Full Reference: Complete function documentation examples","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/index.html","id":"id_-package-website","dir":"","previous_headings":"Documentation","what":"🌐 Package Website","title":"BayesianQDM","text":"Visit pkgdown website : - Interactive documentation - Downloadable examples - Method comparisons - Best practice guides","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/index.html","id":"local-access","dir":"","previous_headings":"Documentation","what":"Local Access","title":"BayesianQDM","text":"Access vignettes locally installation:","code":"# View available vignettes vignette(package = \"BayesianQDM\")  # Open specific vignettes vignette(\"BayesianQDM\") vignette(\"binary-endpoints\", package = \"BayesianQDM\")   vignette(\"continuous-endpoints\", package = \"BayesianQDM\")"},{"path":[]},{"path":"https://gosukehommaEX.github.io/BayesianQDM/index.html","id":"decision-making-functions","dir":"","previous_headings":"Core Functions","what":"Decision Making Functions","title":"BayesianQDM","text":"pGNGsinglebinary() - Go/NoGo/Gray probabilities binary endpoints pGNGsinglecontinuous() - Go/NoGo/Gray probabilities continuous endpoints","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/index.html","id":"probability-calculation-functions","dir":"","previous_headings":"Core Functions","what":"Probability Calculation Functions","title":"BayesianQDM","text":"pPPsinglebinary() - Posterior/predictive probabilities binary endpoints pPPsinglecontinuous() - Posterior/predictive probabilities continuous endpoints","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/index.html","id":"distribution-functions","dir":"","previous_headings":"Core Functions","what":"Distribution Functions","title":"BayesianQDM","text":"p2betadiff() - CDF difference two beta distributions p2betabinomdiff() - Beta-binomial posterior predictive probability pNI2tdiff() - Numerical integration t-distribution differences pMC2tdiff() - Monte Carlo t-distribution differences pWS2tdiff() - Welch-Satterthwaite approximation t-distribution differences d2betadiff() - Density function difference two beta distributions","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/index.html","id":"utility-functions","dir":"","previous_headings":"Core Functions","what":"Utility Functions","title":"BayesianQDM","text":"AppellsF1() - Appell’s hypergeometric function F1","code":""},{"path":[]},{"path":"https://gosukehommaEX.github.io/BayesianQDM/index.html","id":"controlled-design","dir":"","previous_headings":"Study Designs","what":"Controlled Design","title":"BayesianQDM","text":"Standard randomized controlled trials treatment control groups.","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/index.html","id":"uncontrolled-design","dir":"","previous_headings":"Study Designs","what":"Uncontrolled Design","title":"BayesianQDM","text":"Single-arm studies using historical controls beta priors (binary) informative priors (continuous).","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/index.html","id":"external-control-design","dir":"","previous_headings":"Study Designs","what":"External Control Design","title":"BayesianQDM","text":"Incorporating historical/external data power priors enhanced decision making. binary endpoints, use ne1, ne2, ye1, ye2, ae1, ae2 parameters. continuous endpoints, use ne1, ne2, alpha01, alpha02, bar.ye1, bar.ye2, se1, se2 parameters.","code":""},{"path":[]},{"path":[]},{"path":"https://gosukehommaEX.github.io/BayesianQDM/index.html","id":"method-comparison-example","dir":"","previous_headings":"Calculation Methods","what":"Method Comparison Example","title":"BayesianQDM","text":"","code":"# Compare calculation methods mu1 <- 3.5; mu2 <- 1.8; sd1 <- 1.3; sd2 <- 1.1; nu1 <- 14; nu2 <- 16  # Numerical integration (exact) prob_ni <- pNI2tdiff(q = 1.5, mu.t1 = mu1, mu.t2 = mu2,                       sd.t1 = sd1, sd.t2 = sd2, nu.t1 = nu1, nu.t2 = nu2)  # Welch-Satterthwaite approximation (fast)   prob_ws <- pWS2tdiff(q = 1.5, mu.t1 = mu1, mu.t2 = mu2,                       sd.t1 = sd1, sd.t2 = sd2, nu.t1 = nu1, nu.t2 = nu2)  cat(\"NI:\", round(prob_ni, 4), \"WS:\", round(prob_ws, 4),      \"Diff:\", round(abs(prob_ni - prob_ws), 4))"},{"path":[]},{"path":"https://gosukehommaEX.github.io/BayesianQDM/index.html","id":"controlled-design-1","dir":"","previous_headings":"Study Design Examples","what":"Controlled Design","title":"BayesianQDM","text":"Standard two-arm randomized controlled trial.","code":"# Binary endpoint result <- pPPsinglebinary(   prob = 'posterior',    design = 'controlled',    theta0 = 0.15,   n1 = 12, n2 = 15, y1 = 7, y2 = 5,    a1 = 0.5, a2 = 0.5, b1 = 0.5, b2 = 0.5,   m1 = NULL, m2 = NULL,   ne1 = NULL, ne2 = NULL, ye1 = NULL, ye2 = NULL, ae1 = NULL, ae2 = NULL )"},{"path":"https://gosukehommaEX.github.io/BayesianQDM/index.html","id":"uncontrolled-design-1","dir":"","previous_headings":"Study Design Examples","what":"Uncontrolled Design","title":"BayesianQDM","text":"Single-arm study historical control assumption.","code":"result <- pPPsinglebinary(   prob = 'posterior',    design = 'uncontrolled',    theta0 = 0.15,   n1 = 20, n2 = 20, y1 = 12, y2 = 3.5,   a1 = 0.5, a2 = 0.5, b1 = 0.5, b2 = 0.5,   m1 = NULL, m2 = NULL,   ne1 = NULL, ne2 = NULL, ye1 = NULL, ye2 = NULL, ae1 = NULL, ae2 = NULL )"},{"path":"https://gosukehommaEX.github.io/BayesianQDM/index.html","id":"external-control-design-1","dir":"","previous_headings":"Study Design Examples","what":"External Control Design","title":"BayesianQDM","text":"Incorporating historical data using power priors.","code":"result <- pPPsinglebinary(   prob = 'posterior',    design = 'external',    theta0 = 0.15,   n1 = 20, n2 = 20, y1 = 12, y2 = 8,   a1 = 0.5, a2 = 0.5, b1 = 0.5, b2 = 0.5,   m1 = NULL, m2 = NULL,   ne1 = 15, ne2 = 25, ye1 = 9, ye2 = 10, ae1 = 0.5, ae2 = 0.5 )"},{"path":"https://gosukehommaEX.github.io/BayesianQDM/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"BayesianQDM","text":"theoretical background methodology details, please refer package vignettes function documentation.","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"BayesianQDM","text":"cite BayesianQDM publications, please use:","code":"Homma, G., Yamaguchi, Y. (2025). BayesianQDM: Bayesian Quantitative Decision-Making Framework for Binary and Continuous Endpoints. R package version 0.1.0."},{"path":"https://gosukehommaEX.github.io/BayesianQDM/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"BayesianQDM","text":"package licensed GPL (>= 3).","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/index.html","id":"authors","dir":"","previous_headings":"","what":"Authors","title":"BayesianQDM","text":"Gosuke Homma Yusuke Yamaguchi","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/index.html","id":"issues-and-contributions","dir":"","previous_headings":"","what":"Issues and Contributions","title":"BayesianQDM","text":"report bugs request features, please visit GitHub repository.","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 Gosuke Homma Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/AppellsF1.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Appell's First Hypergeometric Function of Two Variables — AppellsF1","title":"Calculate Appell's First Hypergeometric Function of Two Variables — AppellsF1","text":"function computes Appell's first hypergeometric function F1(; b1, b2; c; x, y) using numerical integration integral representation. Appell F1 function generalization Gauss hypergeometric function two variables appears various statistical applications including beta distribution differences.","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/AppellsF1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Appell's First Hypergeometric Function of Two Variables — AppellsF1","text":"","code":"AppellsF1(a, b1, b2, c, x, y)"},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/AppellsF1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Appell's First Hypergeometric Function of Two Variables — AppellsF1","text":"numeric value representing first parameter (must satisfy Re() > 0 Re(c - ) > 0 convergence). b1 numeric value representing second parameter. b2 numeric value representing third parameter. c numeric value representing fourth parameter (must greater ). x numeric value representing first variable (typically |x| < 1 convergence). y numeric value representing second variable (typically |y| < 1 convergence).","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/AppellsF1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Appell's First Hypergeometric Function of Two Variables — AppellsF1","text":"numeric value Appell's first hypergeometric function F1(; b1, b2; c; x, y).","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/AppellsF1.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Appell's First Hypergeometric Function of Two Variables — AppellsF1","text":"function evaluates Appell's F1 hypergeometric function using integral representation: $$F_1(; b_1, b_2; c; x, y) = \\frac{\\Gamma(c)}{\\Gamma()\\Gamma(c-)} \\int_0^1 t^{-1}(1-t)^{c--1}(1-xt)^{-b_1}(1-yt)^{-b_2} dt$$ \\(\\Gamma(\\cdot)\\) gamma function. implementation uses numerical integration via integrate function stats package. Appell F1 function satisfies following properties: Symmetry: \\(F_1(; b_1, b_2; c; x, y) = F_1(; b_2, b_1; c; y, x)\\) Reduction Gauss hypergeometric: \\(F_1(; b, 0; c; x, y) = {}_2F_1(, b; c; x)\\) Special case: \\(F_1(; 0, 0; c; x, y) = 1\\)","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/AppellsF1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Appell's First Hypergeometric Function of Two Variables — AppellsF1","text":"","code":"# Calculate F1(0.5; 0.5, 0; 1; 0.96, 1.2) - reduces to hypergeometric function AppellsF1(0.5, 0.5, 0, 1, 0.96, 1.2) #> [1] 1.920117  # Calculate F1(1; 1, 1; 2; 0.3, 0.4) AppellsF1(1, 1, 1, 2, 0.3, 0.4) #> [1] 1.541507  # Verify symmetry property: F1(a; b1, b2; c; x, y) = F1(a; b2, b1; c; y, x) result1 <- AppellsF1(1, 2, 3, 4, 0.2, 0.3) result2 <- AppellsF1(1, 3, 2, 4, 0.3, 0.2) all.equal(result1, result2) #> [1] TRUE"},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/BayesDecisionProbBinary.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the Go, NoGo and Gray Probabilities for a Clinical Trial When Outcome is Binary Under the Bayesian Framework Using Two Metrics — BayesDecisionProbBinary","title":"Calculate the Go, NoGo and Gray Probabilities for a Clinical Trial When Outcome is Binary Under the Bayesian Framework Using Two Metrics — BayesDecisionProbBinary","text":"function calculates Go, NoGo, Gray probabilities binary outcome clinical trials Bayesian framework using two metrics: () posterior probability treatment effect greater threshold, (ii) posterior predictive probability phase III study success. function supports controlled, uncontrolled, external control designs.","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/BayesDecisionProbBinary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the Go, NoGo and Gray Probabilities for a Clinical Trial When Outcome is Binary Under the Bayesian Framework Using Two Metrics — BayesDecisionProbBinary","text":"","code":"BayesDecisionProbBinary(   prob = \"posterior\",   design = \"controlled\",   theta.TV,   theta.MAV,   theta.NULL = NULL,   gamma1,   gamma2,   pi1,   pi2,   n1,   n2,   a1,   a2,   b1,   b2,   z = NULL,   m1,   m2,   ne1,   ne2,   ye1,   ye2,   ae1,   ae2 )"},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/BayesDecisionProbBinary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the Go, NoGo and Gray Probabilities for a Clinical Trial When Outcome is Binary Under the Bayesian Framework Using Two Metrics — BayesDecisionProbBinary","text":"prob character string specifying type probability use (prob = 'posterior' prob = 'predictive'). design character string specifying type design (design = 'controlled', design = 'uncontrolled', design = 'external'). theta.TV numeric value representing pre-specified threshold value calculating Go probability prob = 'posterior'. theta.MAV numeric value representing pre-specified threshold value calculating NoGo probability prob = 'posterior'. theta.NULL numeric value representing pre-specified threshold value calculating Go/NoGo probabilities prob = 'predictive'. gamma1 numeric value 0 1 representing minimum probability declare success. gamma2 numeric value 0 1 representing futility threshold. pi1 numeric value vector representing true response probability(s) group 1. pi2 numeric value vector representing true response probability(s) group 2. n1 positive integer representing number patients group 1 proof--concept (PoC) trial. n2 positive integer representing number patients group 2 PoC trial. a1 positive numeric value representing first shape parameter prior distribution group 1. a2 positive numeric value representing first shape parameter prior distribution group 2. b1 positive numeric value representing second shape parameter prior distribution group 1. b2 positive numeric value representing second shape parameter prior distribution group 2. z non-negative integer representing hypothetical observed number responders group 2 uncontrolled design. m1 positive integer representing number patients group 1 future trial data. m2 positive integer representing number patients group 2 future trial data. ne1 positive integer representing number patients group 1 external data. ne2 positive integer representing number patients group 2 external data. ye1 non-negative integer representing observed number responders group 1 external data. ye2 non-negative integer representing observed number responders group 2 external data. ae1 positive numeric value representing scale parameter (power parameter) group 1. ae2 positive numeric value representing scale parameter (power parameter) group 2.","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/BayesDecisionProbBinary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the Go, NoGo and Gray Probabilities for a Clinical Trial When Outcome is Binary Under the Bayesian Framework Using Two Metrics — BayesDecisionProbBinary","text":"data frame containing true response probabilities groups, Go, NoGo, Gray probabilities.","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/BayesDecisionProbBinary.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate the Go, NoGo and Gray Probabilities for a Clinical Trial When Outcome is Binary Under the Bayesian Framework Using Two Metrics — BayesDecisionProbBinary","text":"function can obtain: Go probability NoGo probability Gray probability function can used controlled design, uncontrolled design, design using external (historical) data. decision framework based : Go: Probability treatment effect exceeds efficacy threshold NoGo: Probability treatment effect futility threshold Gray: Intermediate zone neither Go NoGo criteria met","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/BayesDecisionProbBinary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the Go, NoGo and Gray Probabilities for a Clinical Trial When Outcome is Binary Under the Bayesian Framework Using Two Metrics — BayesDecisionProbBinary","text":"","code":"# Calculate Go/NoGo/Gray probabilities using posterior probability for controlled design BayesDecisionProbBinary(   prob = 'posterior', design = 'controlled', theta.TV = 0.4, theta.MAV = 0.2, theta.NULL = NULL,   gamma1 = 0.5, gamma2 = 0.2, pi1 = c(0.2, 0.4, 0.6, 0.8), pi2 = rep(0.2, 4), n1 = 12, n2 = 12,   a1 = 0.5, a2 = 0.5, b1 = 0.5, b2 = 0.5, z = NULL, m1 = NULL, m2 = NULL, ne1 = NULL, ne2 = NULL,   ye1 = NULL, ye2 = NULL, ae1 = NULL, ae2 = NULL ) #>   pi1 pi2          Go      Gray         NoGo #> 1 0.2 0.2 0.002318252 0.3230196 0.6746621672 #> 2 0.4 0.2 0.075866100 0.7183683 0.2057655626 #> 3 0.6 0.2 0.384587482 0.5868683 0.0285441901 #> 4 0.8 0.2 0.811071055 0.1879492 0.0009797803  # Calculate Go/NoGo/Gray probabilities using posterior predictive probability for controlled design BayesDecisionProbBinary(   prob = 'predictive', design = 'controlled', theta.TV = NULL, theta.MAV = NULL, theta.NULL = 0,   gamma1 = 0.9, gamma2 = 0.3, pi1 = c(0.2, 0.4, 0.6, 0.8), pi2 = rep(0.2, 4), n1 = 12, n2 = 12,   a1 = 0.5, a2 = 0.5, b1 = 0.5, b2 = 0.5, z = NULL, m1 = 30, m2 = 30, ne1 = NULL, ne2 = NULL,   ye1 = NULL, ye2 = NULL, ae1 = NULL, ae2 = NULL ) #>   pi1 pi2         Go       Gray         NoGo #> 1 0.2 0.2 0.05181157 0.65653374 2.916547e-01 #> 2 0.4 0.2 0.31955679 0.63725065 4.319256e-02 #> 3 0.6 0.2 0.73018709 0.26683521 2.977694e-03 #> 4 0.8 0.2 0.96383294 0.03612578 4.128022e-05"},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/BayesDecisionProbContinuous.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the Go, NoGo and Gray Probabilities for a Clinical Trial When Outcome is Continuous Under the Bayesian Framework Using Two Metrics — BayesDecisionProbContinuous","title":"Calculate the Go, NoGo and Gray Probabilities for a Clinical Trial When Outcome is Continuous Under the Bayesian Framework Using Two Metrics — BayesDecisionProbContinuous","text":"function calculates Go, NoGo, Gray probabilities continuous outcome clinical trials Bayesian framework using two metrics: () posterior probability treatment effect greater threshold, (ii) posterior predictive probability phase III study success. function supports controlled, uncontrolled, external control designs multiple calculation methods.","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/BayesDecisionProbContinuous.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the Go, NoGo and Gray Probabilities for a Clinical Trial When Outcome is Continuous Under the Bayesian Framework Using Two Metrics — BayesDecisionProbContinuous","text":"","code":"BayesDecisionProbContinuous(   nsim,   prob,   design,   prior,   CalcMethod,   theta.TV,   theta.MAV,   theta.NULL,   nMC = NULL,   nINLAsample = NULL,   gamma1,   gamma2,   n1,   n2,   m1,   m2,   kappa01,   kappa02,   nu01,   nu02,   mu01,   mu02,   sigma01,   sigma02,   mu1,   mu2,   sigma1,   sigma2,   r = NULL,   ne1 = NULL,   ne2 = NULL,   alpha01 = NULL,   alpha02 = NULL,   seed )"},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/BayesDecisionProbContinuous.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the Go, NoGo and Gray Probabilities for a Clinical Trial When Outcome is Continuous Under the Bayesian Framework Using Two Metrics — BayesDecisionProbContinuous","text":"nsim positive integer representing number iterations calculating posterior/posterior predictive probability. prob character string specifying type probability use (prob = 'posterior' prob = 'predictive'). design character string specifying type trial design (design = 'controlled', design = 'uncontrolled', design = 'external'). prior character string specifying prior distribution (prior = 'N-Inv-Chisq' prior = 'vague'). CalcMethod character string specifying calculation method (CalcMethod = 'NI' numerical integration, CalcMethod = 'MC' Monte Carlo method, CalcMethod = 'WS' Welch-Satterthwaite approximation, CalcMethod = 'INLA' INLA). theta.TV numeric value representing pre-specified threshold value calculating Go probability prob = 'posterior'. theta.MAV numeric value representing pre-specified threshold value calculating NoGo probability prob = 'posterior'. theta.NULL numeric value representing pre-specified threshold value calculating Go/NoGo probabilities prob = 'predictive'. nMC positive integer representing number iterations Monte Carlo simulation (required CalcMethod = 'MC'). nINLAsample positive integer representing number iterations INLA sampling (required CalcMethod = 'INLA'). gamma1 numeric value 0 1 representing minimum probability declare success. gamma2 numeric value 0 1 representing futility threshold. n1 positive integer representing number patients group 1 proof--concept (PoC) trial. n2 positive integer representing number patients group 2 PoC trial. m1 positive integer representing number patients group 1 future trial data. m2 positive integer representing number patients group 2 future trial data. kappa01 positive numeric value representing prior precision parameter related mean conjugate prior Normal-Inverse-Chi-squared group 1. kappa02 positive numeric value representing prior precision parameter related mean conjugate prior Normal-Inverse-Chi-squared group 2. nu01 positive numeric value representing prior degrees freedom related variance conjugate prior Normal-Inverse-Chi-squared group 1. nu02 positive numeric value representing prior degrees freedom related variance conjugate prior Normal-Inverse-Chi-squared group 2. mu01 numeric value representing prior mean value outcomes group 1 PoC trial. mu02 numeric value representing prior mean value outcomes group 2 PoC trial. sigma01 positive numeric value representing prior standard deviation outcomes group 1 PoC trial. sigma02 positive numeric value representing prior standard deviation outcomes group 2 PoC trial. mu1 numeric value representing true mean group 1 PoC trial. mu2 numeric value representing true mean group 2 PoC trial. sigma1 positive numeric value representing true standard deviation group 1 PoC trial. sigma2 positive numeric value representing true standard deviation group 2 PoC trial. r positive numeric value representing parameter value associated distribution mean group 2 design = 'uncontrolled'. ne1 positive integer representing sample size group 1 external trial (required external design, can NULL external treatment data). ne2 positive integer representing sample size group 2 external trial (required external design, can NULL external control data). alpha01 positive numeric value representing scale parameter power prior group 1 (required external design, can NULL external treatment data). alpha02 positive numeric value representing scale parameter power prior group 2 (required external design, can NULL external control data). seed numeric value representing seed number reproducible random number generation.","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/BayesDecisionProbContinuous.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the Go, NoGo and Gray Probabilities for a Clinical Trial When Outcome is Continuous Under the Bayesian Framework Using Two Metrics — BayesDecisionProbContinuous","text":"data frame containing true means groups, Go, NoGo, Gray probabilities.","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/BayesDecisionProbContinuous.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate the Go, NoGo and Gray Probabilities for a Clinical Trial When Outcome is Continuous Under the Bayesian Framework Using Two Metrics — BayesDecisionProbContinuous","text":"function can obtain: Go probability NoGo probability Gray probability function can used controlled design, uncontrolled design, external control design. decision framework based : Go: Probability treatment effect exceeds efficacy threshold NoGo: Probability treatment effect futility threshold Gray: Intermediate zone neither Go NoGo criteria met function uses simulation generate observed data applies Bayesian methods calculate decision probabilities. Four calculation methods available computing underlying probabilities: numerical integration (NI), Monte Carlo simulation (MC), Welch-Satterthwaite approximation (WS), Integrated Nested Laplace Approximation (INLA) external data incorporation.","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/BayesDecisionProbContinuous.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the Go, NoGo and Gray Probabilities for a Clinical Trial When Outcome is Continuous Under the Bayesian Framework Using Two Metrics — BayesDecisionProbContinuous","text":"","code":"# Example 1: Numerical Integration (NI) method BayesDecisionProbContinuous(   nsim = 100, prob = 'posterior', design = 'controlled',   prior = 'N-Inv-Chisq', CalcMethod = 'NI',   theta.TV = 2, theta.MAV = 0, theta.NULL = NULL,   nMC = NULL, nINLAsample = NULL,   gamma1 = 0.8, gamma2 = 0.3,   n1 = 12, n2 = 12, m1 = NULL, m2 = NULL,   kappa01 = 5, kappa02 = 5, nu01 = 5, nu02 = 5,   mu01 = 5, mu02 = 5, sigma01 = sqrt(5), sigma02 = sqrt(5),   mu1 = 4, mu2 = 0, sigma1 = 1, sigma2 = 1,   r = NULL, ne1 = NULL, ne2 = NULL,   alpha01 = NULL, alpha02 = NULL, seed = 1 ) #>   mu1 mu2   Go NoGo Gray #> 1   4   0 0.73    0 0.27  # Example 2: Monte Carlo (MC) method BayesDecisionProbContinuous(   nsim = 100, prob = 'posterior', design = 'controlled',   prior = 'vague', CalcMethod = 'MC',   theta.TV = 1.5, theta.MAV = -0.5, theta.NULL = NULL,   nMC = 5000, nINLAsample = NULL,   gamma1 = 0.7, gamma2 = 0.2,   n1 = 15, n2 = 15, m1 = NULL, m2 = NULL,   kappa01 = NULL, kappa02 = NULL, nu01 = NULL, nu02 = NULL,   mu01 = NULL, mu02 = NULL, sigma01 = NULL, sigma02 = NULL,   mu1 = 3, mu2 = 1, sigma1 = 1.2, sigma2 = 1.1,   r = NULL, ne1 = NULL, ne2 = NULL,   alpha01 = NULL, alpha02 = NULL, seed = 2 ) #>   mu1 mu2   Go NoGo Gray #> 1   3   1 0.74    0 0.26  # Example 3: Welch-Satterthwaite (WS) approximation method BayesDecisionProbContinuous(   nsim = 100, prob = 'predictive', design = 'controlled',   prior = 'N-Inv-Chisq', CalcMethod = 'WS',   theta.TV = NULL, theta.MAV = NULL, theta.NULL = 1,   nMC = NULL, nINLAsample = NULL,   gamma1 = 0.8, gamma2 = 0.3,   n1 = 10, n2 = 10, m1 = 50, m2 = 50,   kappa01 = 3, kappa02 = 3, nu01 = 4, nu02 = 4,   mu01 = 2, mu02 = 2, sigma01 = 1.5, sigma02 = 1.5,   mu1 = 2.5, mu2 = 1.2, sigma1 = 1, sigma2 = 1,   r = NULL, ne1 = NULL, ne2 = NULL,   alpha01 = NULL, alpha02 = NULL, seed = 3 ) #>   mu1 mu2   Go NoGo Gray #> 1 2.5 1.2 0.23 0.34 0.43  if (FALSE) { # \\dontrun{ # Example 4: INLA method with external control data BayesDecisionProbContinuous(   nsim = 100, prob = 'posterior', design = 'external',   prior = 'vague', CalcMethod = 'INLA',   theta.TV = 1, theta.MAV = -1, theta.NULL = NULL,   nMC = NULL, nINLAsample = 3000,   gamma1 = 0.8, gamma2 = 0.2,   n1 = 12, n2 = 12, m1 = NULL, m2 = NULL,   kappa01 = NULL, kappa02 = NULL, nu01 = NULL, nu02 = NULL,   mu01 = NULL, mu02 = NULL, sigma01 = NULL, sigma02 = NULL,   mu1 = 2, mu2 = 0, sigma1 = 1, sigma2 = 1,   r = NULL, ne1 = NULL, ne2 = 20,   alpha01 = NULL, alpha02 = 0.5, seed = 4 ) } # }"},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/BayesPostPredBinary.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Bayesian Posterior Probability or Bayesian Posterior Predictive Probability for a Clinical Trial When Outcome is Binary — BayesPostPredBinary","title":"Calculate Bayesian Posterior Probability or Bayesian Posterior Predictive Probability for a Clinical Trial When Outcome is Binary — BayesPostPredBinary","text":"function computes Bayesian posterior probability posterior predictive probability binary outcome clinical trials. function can handle controlled, uncontrolled, external control designs, using beta-binomial conjugate priors.","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/BayesPostPredBinary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Bayesian Posterior Probability or Bayesian Posterior Predictive Probability for a Clinical Trial When Outcome is Binary — BayesPostPredBinary","text":"","code":"BayesPostPredBinary(   prob = \"posterior\",   design = \"controlled\",   theta0,   n1,   n2,   y1,   y2,   a1,   a2,   b1,   b2,   m1,   m2,   ne1,   ne2,   ye1,   ye2,   ae1,   ae2 )"},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/BayesPostPredBinary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Bayesian Posterior Probability or Bayesian Posterior Predictive Probability for a Clinical Trial When Outcome is Binary — BayesPostPredBinary","text":"prob character string specifying type probability calculate (prob = 'posterior' prob = 'predictive'). design character string specifying type design (design = 'controlled', design = 'uncontrolled', design = 'external'). theta0 numeric value representing pre-specified threshold value. n1 positive integer representing number patients group 1 proof--concept (PoC) trial. n2 positive integer representing number patients group 2 PoC trial. y1 non-negative integer representing observed number responders group 1 PoC trial. y2 non-negative integer representing observed number responders group 2 PoC trial. a1 positive numeric value representing first shape parameter prior distribution group 1. a2 positive numeric value representing first shape parameter prior distribution group 2. b1 positive numeric value representing second shape parameter prior distribution group 1. b2 positive numeric value representing second shape parameter prior distribution group 2. m1 positive integer representing number patients group 1 future trial data. m2 positive integer representing number patients group 2 future trial data. ne1 positive integer representing number patients group 1 external data. ne2 positive integer representing number patients group 2 external data. ye1 non-negative integer representing observed number responders group 1 external data. ye2 non-negative integer representing observed number responders group 2 external data. ae1 positive numeric value representing scale parameter (power parameter) group 1. ae2 positive numeric value representing scale parameter (power parameter) group 2.","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/BayesPostPredBinary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Bayesian Posterior Probability or Bayesian Posterior Predictive Probability for a Clinical Trial When Outcome is Binary — BayesPostPredBinary","text":"numeric value representing Bayesian posterior probability Bayesian posterior predictive probability.","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/BayesPostPredBinary.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Bayesian Posterior Probability or Bayesian Posterior Predictive Probability for a Clinical Trial When Outcome is Binary — BayesPostPredBinary","text":"function can obtain: Bayesian posterior probability Bayesian posterior predictive probability prior distribution proportion responders (πij) treatment group (j=1,2) follows beta distribution. posterior probability, posterior distribution πij follows beta distribution. posterior predictive probability, predictive distribution future trial data follows beta-binomial distribution. function can account external (historical) data power priors.","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/BayesPostPredBinary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Bayesian Posterior Probability or Bayesian Posterior Predictive Probability for a Clinical Trial When Outcome is Binary — BayesPostPredBinary","text":"","code":"# Calculate posterior probability with external control BayesPostPredBinary(   prob = 'posterior', design = 'external', theta0 = 0.15,   n1 = 12, n2 = 15, y1 = 7, y2 = 9, a1 = 0.5, a2 = 0.5, b1 = 0.5, b2 = 0.5,   m1 = NULL, m2 = NULL, ne1 = 12, ne2 = 12, ye1 = 6, ye2 = 6, ae1 = 0.5, ae2 = 0.5 ) #> [1] 0.1399401  # Calculate posterior predictive probability with external control BayesPostPredBinary(   prob = 'predictive', design = 'external', theta0 = 0.5,   n1 = 12, n2 = 15, y1 = 7, y2 = 7, a1 = 0.5, a2 = 0.5, b1 = 0.5, b2 = 0.5,   m1 = 12, m2 = 12, ne1 = 12, ne2 = 12, ye1 = 6, ye2 = 6, ae1 = 0.5, ae2 = 0.5 ) #> [1] 0.02838203"},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/BayesPostPredContinuous.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Bayesian Posterior Probability or Bayesian Posterior Predictive Probability for a Clinical Trial When Outcome is Continuous — BayesPostPredContinuous","title":"Calculate Bayesian Posterior Probability or Bayesian Posterior Predictive Probability for a Clinical Trial When Outcome is Continuous — BayesPostPredContinuous","text":"function computes Bayesian posterior probability posterior predictive probability continuous outcome clinical trials. function supports controlled, uncontrolled, external control designs Normal-Inverse-Chi-squared vague priors, using four calculation methods: numerical integration, Monte Carlo simulation, Welch-Satterthwaite approximation, INLA.","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/BayesPostPredContinuous.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Bayesian Posterior Probability or Bayesian Posterior Predictive Probability for a Clinical Trial When Outcome is Continuous — BayesPostPredContinuous","text":"","code":"BayesPostPredContinuous(   prob = \"posterior\",   design = \"controlled\",   prior = \"vague\",   CalcMethod = \"NI\",   theta0,   nMC = NULL,   nINLAsample = NULL,   n1,   n2,   m1,   m2,   kappa01,   kappa02,   nu01,   nu02,   mu01,   mu02,   sigma01,   sigma02,   bar.y1,   bar.y2,   s1,   s2,   r = NULL,   ne1 = NULL,   ne2 = NULL,   alpha01 = NULL,   alpha02 = NULL )"},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/BayesPostPredContinuous.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Bayesian Posterior Probability or Bayesian Posterior Predictive Probability for a Clinical Trial When Outcome is Continuous — BayesPostPredContinuous","text":"prob character string specifying type probability calculate (prob = 'posterior' prob = 'predictive'). design character string specifying type trial design (design = 'controlled', design = 'uncontrolled', design = 'external'). prior character string specifying prior distribution (prior = 'N-Inv-Chisq' prior = 'vague'). CalcMethod character string specifying calculation method (CalcMethod = 'NI' numerical integration, CalcMethod = 'MC' Monte Carlo method, CalcMethod = 'WS' Welch-Satterthwaite approximation, CalcMethod = 'INLA' INLA). theta0 numeric value representing pre-specified threshold value. nMC positive integer representing number iterations Monte Carlo simulation (required CalcMethod = 'MC'). nINLAsample positive integer representing number iterations INLA sampling (required CalcMethod = 'INLA'). n1 positive integer representing number patients group 1 proof--concept (PoC) trial. n2 positive integer representing number patients group 2 PoC trial. m1 positive integer representing number patients group 1 future trial data. m2 positive integer representing number patients group 2 future trial data. kappa01 positive numeric value representing prior precision parameter related mean conjugate prior Normal-Inverse-Chi-squared group 1. kappa02 positive numeric value representing prior precision parameter related mean conjugate prior Normal-Inverse-Chi-squared group 2. nu01 positive numeric value representing prior degrees freedom related variance conjugate prior Normal-Inverse-Chi-squared group 1. nu02 positive numeric value representing prior degrees freedom related variance conjugate prior Normal-Inverse-Chi-squared group 2. mu01 numeric value representing prior mean value outcomes group 1 PoC trial. mu02 numeric value representing prior mean value outcomes group 2 PoC trial. sigma01 positive numeric value representing prior standard deviation outcomes group 1 PoC trial. sigma02 positive numeric value representing prior standard deviation outcomes group 2 PoC trial. bar.y1 numeric value representing sample mean group 1. bar.y2 numeric value representing sample mean group 2. s1 positive numeric value representing sample standard deviation group 1. s2 positive numeric value representing sample standard deviation group 2. r positive numeric value representing parameter value associated distribution mean group 2 design = 'uncontrolled'. ne1 positive integer representing sample size group 1 external trial (can NULL external treatment data). ne2 positive integer representing sample size group 2 external trial (can NULL external control data). alpha01 positive numeric value representing scale parameter power prior group 1 (can NULL external treatment data). alpha02 positive numeric value representing scale parameter power prior group 2 (can NULL external control data).","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/BayesPostPredContinuous.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Bayesian Posterior Probability or Bayesian Posterior Predictive Probability for a Clinical Trial When Outcome is Continuous — BayesPostPredContinuous","text":"numeric vector representing Bayesian posterior probability Bayesian posterior predictive probability. function can handle vectorized inputs.","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/BayesPostPredContinuous.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Bayesian Posterior Probability or Bayesian Posterior Predictive Probability for a Clinical Trial When Outcome is Continuous — BayesPostPredContinuous","text":"function can obtain: Bayesian posterior probability Bayesian posterior predictive probability Prior distribution mean variance outcomes treatment group (k=1,2) can either (1) Normal-Inverse-Chi-squared (2) Vague. posterior distribution posterior predictive distribution outcome treatment group follows t-distribution. Four calculation methods available: NI: Numerical integration method exact computation MC: Monte Carlo simulation flexible approximation WS: Welch-Satterthwaite approximation computational efficiency INLA: Integrated Nested Laplace Approximation external data incorporation","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/BayesPostPredContinuous.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Bayesian Posterior Probability or Bayesian Posterior Predictive Probability for a Clinical Trial When Outcome is Continuous — BayesPostPredContinuous","text":"","code":"# Example 1: Numerical Integration (NI) method with N-Inv-Chisq prior BayesPostPredContinuous(   prob = 'posterior', design = 'controlled', prior = 'N-Inv-Chisq', CalcMethod = 'NI',   theta0 = 2, n1 = 12, n2 = 12, kappa01 = 5, kappa02 = 5, nu01 = 5, nu02 = 5,   mu01 = 5, mu02 = 5, sigma01 = sqrt(5), sigma02 = sqrt(5),   bar.y1 = 2, bar.y2 = 0, s1 = 1, s2 = 1 ) #> [1] 0.2438672  # Example 2: Monte Carlo (MC) method with vague prior BayesPostPredContinuous(   prob = 'posterior', design = 'controlled', prior = 'vague', CalcMethod = 'MC',   theta0 = 1, nMC = 10000, n1 = 12, n2 = 12,   bar.y1 = 3, bar.y2 = 1, s1 = 1.5, s2 = 1.2 ) #> [1] 0.9502  # Example 3: Welch-Satterthwaite (WS) approximation with N-Inv-Chisq prior BayesPostPredContinuous(   prob = 'predictive', design = 'controlled', prior = 'N-Inv-Chisq', CalcMethod = 'WS',   theta0 = 0.5, n1 = 15, n2 = 15, m1 = 100, m2 = 100,   kappa01 = 3, kappa02 = 3, nu01 = 4, nu02 = 4, mu01 = 2, mu02 = 2,   sigma01 = 2, sigma02 = 2, bar.y1 = 2.5, bar.y2 = 1.8, s1 = 1.8, s2 = 1.6 ) #> [1] 0.6288522  # \\donttest{ # Example 4: INLA method with external control data (requires INLA package) if (requireNamespace(\"INLA\", quietly = TRUE)) {   BayesPostPredContinuous(     prob = 'posterior', design = 'external', prior = 'vague', CalcMethod = 'INLA',     theta0 = 1.5, nINLAsample = 5000, n1 = 12, n2 = 12,     bar.y1 = 4, bar.y2 = 2, s1 = 1.2, s2 = 1.1,     ne2 = 20, alpha02 = 0.5   ) } #> [1] 0.6282 # }"},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/d2betadiff.html","id":null,"dir":"Reference","previous_headings":"","what":"Probability Density Function of the Difference Between Two Beta Variables — d2betadiff","title":"Probability Density Function of the Difference Between Two Beta Variables — d2betadiff","text":"function calculates probability density function (PDF) difference two independent beta-distributed random variables. computation uses Appell's first hypergeometric function numerical evaluation. Specifically, computes density f(π) π = X1 - X2, X1 ~ Beta(alpha1, beta1) X2 ~ Beta(alpha2, beta2).","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/d2betadiff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Probability Density Function of the Difference Between Two Beta Variables — d2betadiff","text":"","code":"d2betadiff(pi, alpha1, alpha2, beta1, beta2)"},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/d2betadiff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Probability Density Function of the Difference Between Two Beta Variables — d2betadiff","text":"pi numeric value range [-1, 1] representing difference two beta variables. alpha1 positive numeric value representing first shape parameter first beta distribution. alpha2 positive numeric value representing first shape parameter second beta distribution. beta1 positive numeric value representing second shape parameter first beta distribution. beta2 positive numeric value representing second shape parameter second beta distribution.","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/d2betadiff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Probability Density Function of the Difference Between Two Beta Variables — d2betadiff","text":"numeric value representing probability density specified difference value. Returns 0 pi outside range [-1, 1].","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/d2betadiff.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Probability Density Function of the Difference Between Two Beta Variables — d2betadiff","text":"function evaluates density using different formulations depending range π: π ∈ [-1, 0): Uses Appell's F1 function parameters adjusted negative differences π ∈ [0, 1): Uses Appell's F1 function parameters adjusted positive differences Special case π = 0: alpha1 + alpha2 > 1 beta1 + beta2 > 1, uses simplified beta function form π ∉ [-1, 1]: Returns 0 (outside support distribution) normalization constant k computed : $$k = \\frac{1}{B(\\alpha_1, \\beta_1) B(\\alpha_2, \\beta_2)}$$ B(·,·) beta function.","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/d2betadiff.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Probability Density Function of the Difference Between Two Beta Variables — d2betadiff","text":"","code":"# Calculate density at π = 0.2 for symmetric beta distributions d2betadiff(0.2, 0.5, 0.5, 0.5, 0.5) #> [1] 0.6111922  # Calculate density at π = 0 for Beta(2,3) - Beta(1,4) d2betadiff(0, 2, 3, 1, 4) #> [1] 0.8571429  # Calculate density at π = -0.3 for informative priors d2betadiff(-0.3, 3, 2, 2, 3) #> [1] 0.3267281  # Verify that density is 0 outside [-1, 1] d2betadiff(1.5, 1, 1, 1, 1) #> [1] 0"},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/p2betabinomdiff.html","id":null,"dir":"Reference","previous_headings":"","what":"Cumulative Distribution Function of the Difference Between Two Beta-Binomial Variables — p2betabinomdiff","title":"Cumulative Distribution Function of the Difference Between Two Beta-Binomial Variables — p2betabinomdiff","text":"function calculates cumulative distribution function (CDF) difference two independent beta-binomial random variables. computation uses exact enumeration possible combinations outcomes. Specifically, computes P((Y1/m1) - (Y2/m2) ≤ q) P((Y1/m1) - (Y2/m2) > q) Y1 ~ BetaBinomial(m1, alpha1, beta1) Y2 ~ BetaBinomial(m2, alpha2, beta2).","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/p2betabinomdiff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cumulative Distribution Function of the Difference Between Two Beta-Binomial Variables — p2betabinomdiff","text":"","code":"p2betabinomdiff(q, m1, m2, alpha1, alpha2, beta1, beta2, lower.tail = TRUE)"},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/p2betabinomdiff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cumulative Distribution Function of the Difference Between Two Beta-Binomial Variables — p2betabinomdiff","text":"q numeric value representing quantile threshold difference proportions. m1 positive integer representing number trials first beta-binomial distribution. m2 positive integer representing number trials second beta-binomial distribution. alpha1 positive numeric value representing first shape parameter first beta distribution. alpha2 positive numeric value representing first shape parameter second beta distribution. beta1 positive numeric value representing second shape parameter first beta distribution. beta2 positive numeric value representing second shape parameter second beta distribution. lower.tail logical value; TRUE (default), probabilities P((Y1/m1) - (Y2/m2) ≤ q), otherwise P((Y1/m1) - (Y2/m2) > q).","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/p2betabinomdiff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cumulative Distribution Function of the Difference Between Two Beta-Binomial Variables — p2betabinomdiff","text":"numeric value [0, 1] representing cumulative probability difference proportions two beta-binomial variables (lower.tail = TRUE) exceeds (lower.tail = FALSE) quantile q.","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/p2betabinomdiff.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cumulative Distribution Function of the Difference Between Two Beta-Binomial Variables — p2betabinomdiff","text":"function computes exact probability enumerating possible combinations outcomes beta-binomial distributions summing joint probabilities proportion difference satisfies specified condition. probability mass function BetaBinomial(m, α, β) : $$P(Y = k) = \\binom{m}{k} \\frac{B(k + \\alpha, m - k + \\beta)}{B(\\alpha, \\beta)}$$ B(·,·) beta function. beta-binomial distribution arises success probability binomial distribution follows beta distribution, making useful modeling overdispersed count data. large values m1 m2, computation may become slow requires evaluating (m1 + 1) × (m2 + 1) combinations.","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/p2betabinomdiff.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cumulative Distribution Function of the Difference Between Two Beta-Binomial Variables — p2betabinomdiff","text":"","code":"# Calculate P((Y1/12) - (Y2/12) > 0.2) for symmetric beta priors p2betabinomdiff(0.2, 12, 12, 0.5, 0.5, 0.5, 0.5, lower.tail = FALSE) #> [1] 0.3372581  # Calculate P((Y1/20) - (Y2/15) > 0.1) for different sample sizes p2betabinomdiff(0.1, 20, 15, 1, 1, 1, 1, lower.tail = FALSE) #> [1] 0.4017857  # Calculate P((Y1/10) - (Y2/10) > 0) for informative priors p2betabinomdiff(0, 10, 10, 2, 3, 3, 2, lower.tail = FALSE) #> [1] 0.2383331  # Calculate lower tail probability P((Y1/15) - (Y2/15) ≤ 0.05) p2betabinomdiff(0.05, 15, 15, 1, 1, 1, 1, lower.tail = TRUE) #> [1] 0.53125"},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/p2betadiff.html","id":null,"dir":"Reference","previous_headings":"","what":"Cumulative Distribution Function of the Difference Between Two Beta Variables — p2betadiff","title":"Cumulative Distribution Function of the Difference Between Two Beta Variables — p2betadiff","text":"function calculates cumulative distribution function (CDF) difference two independent beta-distributed random variables using numerical integration probability density function. density function uses Appell's first hypergeometric function computation. Specifically, computes P(X1 - X2 ≤ q) P(X1 - X2 > q) X1 ~ Beta(alpha1, beta1) X2 ~ Beta(alpha2, beta2).","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/p2betadiff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cumulative Distribution Function of the Difference Between Two Beta Variables — p2betadiff","text":"","code":"p2betadiff(q, alpha1, alpha2, beta1, beta2, lower.tail = TRUE)"},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/p2betadiff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cumulative Distribution Function of the Difference Between Two Beta Variables — p2betadiff","text":"q numeric value range [-1, 1] representing quantile threshold. alpha1 positive numeric value representing first shape parameter first beta distribution. alpha2 positive numeric value representing first shape parameter second beta distribution. beta1 positive numeric value representing second shape parameter first beta distribution. beta2 positive numeric value representing second shape parameter second beta distribution. lower.tail logical value; TRUE (default), probabilities P(X1 - X2 ≤ q), otherwise P(X1 - X2 > q).","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/p2betadiff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cumulative Distribution Function of the Difference Between Two Beta Variables — p2betadiff","text":"numeric value [0, 1] representing cumulative probability difference two beta variables (lower.tail = TRUE) exceeds (lower.tail = FALSE) quantile q.","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/p2betadiff.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cumulative Distribution Function of the Difference Between Two Beta Variables — p2betadiff","text":"function computes CDF numerically integrating probability density function difference using adaptive quadrature. density evaluated using piecewise formulations based Appell's F1 hypergeometric function: π ∈ [-1, 0): Uses Appell's F1 parameters adjusted negative differences π ∈ [0, 1): Uses Appell's F1 parameters adjusted positive differences Special case handling π = 0 certain parameter conditions met upper tail probability P(X1 - X2 > q) computed : $$P(X1 - X2 > q) = \\int_q^1 f(π) dπ$$ f(π) probability density function difference.","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/p2betadiff.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cumulative Distribution Function of the Difference Between Two Beta Variables — p2betadiff","text":"","code":"# Calculate P(Beta(0.5, 0.5) - Beta(0.5, 0.5) > 0.2) p2betadiff(0.2, 0.5, 0.5, 0.5, 0.5, lower.tail = FALSE) #> [1] 0.3377407  # Calculate P(Beta(2, 3) - Beta(1, 4) > -0.1) p2betadiff(-0.1, 2, 3, 1, 4, lower.tail = FALSE) #> [1] 0.8614457  # Calculate P(Beta(1, 1) - Beta(1, 1) > 0) - should be approximately 0.5 p2betadiff(0, 1, 1, 1, 1, lower.tail = FALSE) #> [1] 0.5  # Calculate lower tail probability P(Beta(2, 2) - Beta(2, 2) ≤ 0.1) p2betadiff(0.1, 2, 2, 2, 2, lower.tail = TRUE) #> [1] 0.6181498"},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/pBetaBinomdiff.html","id":null,"dir":"Reference","previous_headings":"","what":"Cumulative Distribution Function of the Difference Between Two Beta-Binomial Variables — pBetaBinomdiff","title":"Cumulative Distribution Function of the Difference Between Two Beta-Binomial Variables — pBetaBinomdiff","text":"function calculates cumulative distribution function (CDF) difference two independent beta-binomial random variables. Specifically, computes P((Y1/m1) - (Y2/m2) > q) Y1 ~ BetaBinomial(m1, alpha1, beta1) Y2 ~ BetaBinomial(m2, alpha2, beta2).","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/pBetaBinomdiff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cumulative Distribution Function of the Difference Between Two Beta-Binomial Variables — pBetaBinomdiff","text":"","code":"pBetaBinomdiff(q, m1, m2, alpha1, alpha2, beta1, beta2)"},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/pBetaBinomdiff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cumulative Distribution Function of the Difference Between Two Beta-Binomial Variables — pBetaBinomdiff","text":"q numeric value representing quantile threshold proportion difference. m1 positive integer representing number trials first beta-binomial distribution. m2 positive integer representing number trials second beta-binomial distribution. alpha1 positive numeric value representing first shape parameter first beta distribution. alpha2 positive numeric value representing first shape parameter second beta distribution. beta1 positive numeric value representing second shape parameter first beta distribution. beta2 positive numeric value representing second shape parameter second beta distribution.","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/pBetaBinomdiff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cumulative Distribution Function of the Difference Between Two Beta-Binomial Variables — pBetaBinomdiff","text":"numeric value representing P((Y1/m1) - (Y2/m2) > q), probability difference proportions two beta-binomial variables exceeds quantile q.","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/pBetaBinomdiff.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cumulative Distribution Function of the Difference Between Two Beta-Binomial Variables — pBetaBinomdiff","text":"function uses probability mass functions beta-binomial distributions compute exact probability. beta-binomial distribution arises success probability binomial distribution follows beta distribution, making useful modeling overdispersed count data. probability mass function BetaBinomial(m, α, β) : $$P(Y = k) = \\binom{m}{k} \\frac{B(k + \\alpha, m - k + \\beta)}{B(\\alpha, \\beta)}$$ B(·,·) beta function.","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/pBetaBinomdiff.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cumulative Distribution Function of the Difference Between Two Beta-Binomial Variables — pBetaBinomdiff","text":"","code":"# Calculate P((Y1/12) - (Y2/12) > 0.2) for symmetric beta priors pBetaBinomdiff(0.2, 12, 12, 0.5, 0.5, 0.5, 0.5) #> [1] 0.3372581  # Calculate P((Y1/20) - (Y2/15) > 0.1) for different sample sizes pBetaBinomdiff(0.1, 20, 15, 1, 1, 1, 1) #> [1] 0.4017857  # Calculate P((Y1/10) - (Y2/10) > 0) for informative priors pBetaBinomdiff(0, 10, 10, 2, 3, 3, 2) #> [1] 0.2383331"},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/pBetadiff.html","id":null,"dir":"Reference","previous_headings":"","what":"Cumulative Distribution Function of the Difference Between Two Beta Variables — pBetadiff","title":"Cumulative Distribution Function of the Difference Between Two Beta Variables — pBetadiff","text":"function calculates cumulative distribution function (CDF) difference two independent beta-distributed random variables using Appell's first hypergeometric function. Specifically, computes P(X1 - X2 > q) X1 ~ Beta(alpha1, beta1) X2 ~ Beta(alpha2, beta2).","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/pBetadiff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cumulative Distribution Function of the Difference Between Two Beta Variables — pBetadiff","text":"","code":"pBetadiff(q, alpha1, alpha2, beta1, beta2)"},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/pBetadiff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cumulative Distribution Function of the Difference Between Two Beta Variables — pBetadiff","text":"q numeric value representing quantile threshold. alpha1 positive numeric value representing first shape parameter first beta distribution. alpha2 positive numeric value representing first shape parameter second beta distribution. beta1 positive numeric value representing second shape parameter first beta distribution. beta2 positive numeric value representing second shape parameter second beta distribution.","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/pBetadiff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cumulative Distribution Function of the Difference Between Two Beta Variables — pBetadiff","text":"numeric value representing P(X1 - X2 > q), probability difference two beta variables exceeds quantile q.","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/pBetadiff.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cumulative Distribution Function of the Difference Between Two Beta Variables — pBetadiff","text":"function uses piecewise approach based range difference π = X1 - X2: π ∈ [-1, 0): Uses Appell's F1 function specific parameters π ∈ [0, 1): Uses different parameterization Appell's F1 function Special case handling π = 0 certain parameter conditions met","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/pBetadiff.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cumulative Distribution Function of the Difference Between Two Beta Variables — pBetadiff","text":"","code":"# Calculate P(Beta(0.5, 0.5) - Beta(0.5, 0.5) > 0.2) pBetadiff(0.2, 0.5, 0.5, 0.5, 0.5) #> [1] 0.3377407  # Calculate P(Beta(2, 3) - Beta(1, 4) > -0.1) pBetadiff(-0.1, 2, 3, 1, 4) #> [1] 0.8614457  # Calculate P(Beta(1, 1) - Beta(1, 1) > 0) pBetadiff(0, 1, 1, 1, 1) #> [1] 0.5"},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/pGNGsinglebinary.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Go, NoGo, and Gray Probabilities for a Clinical Trial with a Single Binary Endpoint Under the Bayesian Framework Using Two Metrics — pGNGsinglebinary","title":"Calculate Go, NoGo, and Gray Probabilities for a Clinical Trial with a Single Binary Endpoint Under the Bayesian Framework Using Two Metrics — pGNGsinglebinary","text":"function calculates Go, NoGo, Gray probabilities binary outcome clinical trials using Bayesian framework. function evaluates operating characteristics computing probability making type decision (Go, NoGo, Gray) across different true response rates. function supports controlled, uncontrolled, external control designs.","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/pGNGsinglebinary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Go, NoGo, and Gray Probabilities for a Clinical Trial with a Single Binary Endpoint Under the Bayesian Framework Using Two Metrics — pGNGsinglebinary","text":"","code":"pGNGsinglebinary(   prob = \"posterior\",   design = \"controlled\",   theta.TV,   theta.MAV,   theta.NULL = NULL,   gamma1,   gamma2,   pi1,   pi2,   n1,   n2,   a1,   a2,   b1,   b2,   z = NULL,   m1,   m2,   ne1,   ne2,   ye1,   ye2,   ae1,   ae2,   error_if_Miss = TRUE,   Gray_inc_Miss = FALSE )"},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/pGNGsinglebinary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Go, NoGo, and Gray Probabilities for a Clinical Trial with a Single Binary Endpoint Under the Bayesian Framework Using Two Metrics — pGNGsinglebinary","text":"prob character string specifying type probability use decision-making. Options 'posterior' posterior probability 'predictive' posterior predictive probability. design character string specifying type trial design. Options 'controlled' randomized controlled trials, 'uncontrolled' single-arm studies, 'external' designs incorporating external data. theta.TV numeric value representing target value threshold calculating Go probability prob = 'posterior'. represents minimum clinically meaningful treatment effect. theta.MAV numeric value representing minimum acceptable value threshold calculating NoGo probability prob = 'posterior'. represents futility threshold. theta.NULL numeric value representing null hypothesis threshold calculating Go/NoGo probabilities prob = 'predictive'. gamma1 numeric value (0, 1) representing minimum probability threshold declare success (Go decision). Typically set values like 0.8 0.9. gamma2 numeric value (0, 1) representing maximum probability threshold declaring futility (NoGo decision). Typically set values like 0.2 0.3, gamma2 < gamma1. pi1 numeric value vector representing true response probability(s) group 1 (treatment) evaluate operating characteristics. pi2 numeric value vector representing true response probability(s) group 2 (control) evaluate operating characteristics. n1 positive integer representing number patients group 1 proof--concept (PoC) trial. n2 positive integer representing number patients group 2 PoC trial. a1 positive numeric value representing first shape parameter (α) prior beta distribution group 1. a2 positive numeric value representing first shape parameter (α) prior beta distribution group 2. b1 positive numeric value representing second shape parameter (β) prior beta distribution group 1. b2 positive numeric value representing second shape parameter (β) prior beta distribution group 2. z non-negative integer representing hypothetical observed number responders group 2 uncontrolled design (required design = 'uncontrolled'). m1 positive integer representing number patients group 1 future trial (required prob = 'predictive'). m2 positive integer representing number patients group 2 future trial (required prob = 'predictive'). ne1 positive integer representing number patients group 1 external data (required design = 'external'). ne2 positive integer representing number patients group 2 external data (required design = 'external'). ye1 non-negative integer representing observed number responders group 1 external data (required design = 'external'). ye2 non-negative integer representing observed number responders group 2 external data (required design = 'external'). ae1 numeric value (0, 1] representing power prior scale parameter group 1 (required design = 'external'). Controls degree borrowing: 0 = borrowing, 1 = full borrowing. ae2 numeric value (0, 1] representing power prior scale parameter group 2 (required design = 'external'). Controls degree borrowing: 0 = borrowing, 1 = full borrowing. error_if_Miss logical value; TRUE (default), function stops error positive Miss probability obtained, indicating poorly chosen thresholds. FALSE, function proceeds reports Miss probability based Gray_inc_Miss setting. Gray_inc_Miss logical value; TRUE, Miss probability included Gray probability (Miss reported separately). FALSE (default), Miss probability reported separate category. parameter active error_if_Miss = FALSE.","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/pGNGsinglebinary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Go, NoGo, and Gray Probabilities for a Clinical Trial with a Single Binary Endpoint Under the Bayesian Framework Using Two Metrics — pGNGsinglebinary","text":"data frame containing true response probabilities groups corresponding Go, NoGo, Gray probabilities. error_if_Miss = FALSE Gray_inc_Miss = FALSE, Miss probability also included separate column.","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/pGNGsinglebinary.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Go, NoGo, and Gray Probabilities for a Clinical Trial with a Single Binary Endpoint Under the Bayesian Framework Using Two Metrics — pGNGsinglebinary","text":"function evaluates operating characteristics : Enumerating possible trial outcomes (y1, y2) specified true response rates (pi1, pi2) Computing posterior predictive probability outcome Classifying outcome Go, NoGo, Gray based decision thresholds Weighting outcome probability true response rates Decision rules: Go: P(treatment effect > threshold | data) ≥ γ₁ P(treatment effect > threshold | data) lower tail < γ₂ NoGo: P(treatment effect > threshold | data) < γ₁ P(treatment effect > threshold | data) lower tail ≥ γ₂ Gray: Neither Go NoGo criteria met (γ₂ < probability < γ₁) Miss: Go NoGo criteria met simultaneously (indicates poorly chosen thresholds) Handling Miss probability: error_if_Miss = TRUE (default): Function stops error Miss probability > 0, prompting reconsideration thresholds error_if_Miss = FALSE Gray_inc_Miss = TRUE: Miss probability added Gray probability error_if_Miss = FALSE Gray_inc_Miss = FALSE: Miss probability reported separate category function can used : Controlled design: Two-arm randomized trial Uncontrolled design: Single-arm trial historical control External design: Incorporating historical data power priors","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/pGNGsinglebinary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Go, NoGo, and Gray Probabilities for a Clinical Trial with a Single Binary Endpoint Under the Bayesian Framework Using Two Metrics — pGNGsinglebinary","text":"","code":"# Example 1: Calculate Go/NoGo/Gray probabilities using posterior probability # for controlled design (default: error_if_Miss = TRUE) pGNGsinglebinary(   prob = 'posterior', design = 'controlled',   theta.TV = 0.4, theta.MAV = 0.2, theta.NULL = NULL,   gamma1 = 0.8, gamma2 = 0.2,   pi1 = c(0.2, 0.4, 0.6, 0.8), pi2 = rep(0.2, 4),   n1 = 12, n2 = 12, a1 = 0.5, a2 = 0.5, b1 = 0.5, b2 = 0.5,   z = NULL, m1 = NULL, m2 = NULL,   ne1 = NULL, ne2 = NULL, ye1 = NULL, ye2 = NULL, ae1 = NULL, ae2 = NULL,   error_if_Miss = TRUE, Gray_inc_Miss = FALSE ) #>   pi1 pi2           Go        Gray       NoGo #> 1 0.2 0.2 0.0004067764 0.009831985 0.98976124 #> 2 0.4 0.2 0.0277220471 0.140475165 0.83180279 #> 3 0.6 0.2 0.2223529072 0.342730771 0.43491632 #> 4 0.8 0.2 0.6558924323 0.254936309 0.08917126  # Example 2: Calculate Go/NoGo/Gray probabilities using posterior predictive probability pGNGsinglebinary(   prob = 'predictive', design = 'controlled',   theta.TV = NULL, theta.MAV = NULL, theta.NULL = 0,   gamma1 = 0.9, gamma2 = 0.3,   pi1 = c(0.2, 0.4, 0.6, 0.8), pi2 = rep(0.2, 4),   n1 = 12, n2 = 12, a1 = 0.5, a2 = 0.5, b1 = 0.5, b2 = 0.5,   z = NULL, m1 = 30, m2 = 30,   ne1 = NULL, ne2 = NULL, ye1 = NULL, ye2 = NULL, ae1 = NULL, ae2 = NULL,   error_if_Miss = TRUE, Gray_inc_Miss = FALSE ) #>   pi1 pi2         Go       Gray        NoGo #> 1 0.2 0.2 0.05181157 0.16723674 0.780951694 #> 2 0.4 0.2 0.31955679 0.34291483 0.337528381 #> 3 0.6 0.2 0.73018709 0.20070958 0.069103325 #> 4 0.8 0.2 0.96383294 0.03237868 0.003788378  # Example 3: Report Miss probability separately when thresholds may be suboptimal pGNGsinglebinary(   prob = 'posterior', design = 'controlled',   theta.TV = 0.3, theta.MAV = 0.25, theta.NULL = NULL,   gamma1 = 0.7, gamma2 = 0.6,   pi1 = c(0.4, 0.6), pi2 = rep(0.3, 2),   n1 = 10, n2 = 10, a1 = 1, a2 = 1, b1 = 1, b2 = 1,   z = NULL, m1 = NULL, m2 = NULL,   ne1 = NULL, ne2 = NULL, ye1 = NULL, ye2 = NULL, ae1 = NULL, ae2 = NULL,   error_if_Miss = FALSE, Gray_inc_Miss = FALSE ) #>   pi1 pi2         Go      Gray      NoGo Miss #> 1 0.4 0.3 0.04690148 0.1937072 0.7593913    0 #> 2 0.6 0.3 0.24398543 0.3574158 0.3985988    0  # Example 4: Include Miss probability in Gray when error_if_Miss = FALSE pGNGsinglebinary(   prob = 'posterior', design = 'controlled',   theta.TV = 0.3, theta.MAV = 0.25, theta.NULL = NULL,   gamma1 = 0.7, gamma2 = 0.6,   pi1 = c(0.4, 0.6), pi2 = rep(0.3, 2),   n1 = 10, n2 = 10, a1 = 1, a2 = 1, b1 = 1, b2 = 1,   z = NULL, m1 = NULL, m2 = NULL,   ne1 = NULL, ne2 = NULL, ye1 = NULL, ye2 = NULL, ae1 = NULL, ae2 = NULL,   error_if_Miss = FALSE, Gray_inc_Miss = TRUE ) #>   pi1 pi2         Go      Gray      NoGo #> 1 0.4 0.3 0.04690148 0.1937072 0.7593913 #> 2 0.6 0.3 0.24398543 0.3574158 0.3985988"},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/pGNGsinglecontinuous.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the Go, NoGo and Gray Probabilities for a Clinical Trial When Outcome is Continuous Under the Bayesian Framework Using Two Metrics — pGNGsinglecontinuous","title":"Calculate the Go, NoGo and Gray Probabilities for a Clinical Trial When Outcome is Continuous Under the Bayesian Framework Using Two Metrics — pGNGsinglecontinuous","text":"function computes Go, NoGo, Gray probabilities continuous outcome clinical trials using Bayesian framework. function supports controlled, uncontrolled, external control designs multiple calculation methods including numerical integration, Monte Carlo simulation, Welch-Satterthwaite approximation. external control designs, power priors incorporated using exact conjugate representation.","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/pGNGsinglecontinuous.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the Go, NoGo and Gray Probabilities for a Clinical Trial When Outcome is Continuous Under the Bayesian Framework Using Two Metrics — pGNGsinglecontinuous","text":"","code":"pGNGsinglecontinuous(   nsim,   prob,   design,   prior,   CalcMethod,   theta.TV,   theta.MAV,   theta.NULL,   nMC = NULL,   gamma1,   gamma2,   n1,   n2,   m1,   m2,   kappa01,   kappa02,   nu01,   nu02,   mu01,   mu02,   sigma01,   sigma02,   mu1,   mu2,   sigma1,   sigma2,   r = NULL,   ne1 = NULL,   ne2 = NULL,   alpha01 = NULL,   alpha02 = NULL,   bar.ye1 = NULL,   bar.ye2 = NULL,   se1 = NULL,   se2 = NULL,   error_if_Miss = TRUE,   Gray_inc_Miss = FALSE,   seed )"},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/pGNGsinglecontinuous.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the Go, NoGo and Gray Probabilities for a Clinical Trial When Outcome is Continuous Under the Bayesian Framework Using Two Metrics — pGNGsinglecontinuous","text":"nsim positive integer representing number iterations calculating posterior/posterior predictive probability. prob character string specifying type probability use (prob = 'posterior' prob = 'predictive'). design character string specifying type trial design (design = 'controlled', design = 'uncontrolled', design = 'external'). prior character string specifying prior distribution (prior = 'N-Inv-Chisq' prior = 'vague'). CalcMethod character string specifying calculation method (CalcMethod = 'NI' numerical integration, CalcMethod = 'MC' Monte Carlo method, CalcMethod = 'WS' Welch-Satterthwaite approximation). theta.TV numeric value representing pre-specified threshold value calculating Go probability prob = 'posterior'. theta.MAV numeric value representing pre-specified threshold value calculating NoGo probability prob = 'posterior'. theta.NULL numeric value representing pre-specified threshold value calculating Go probability prob = 'predictive'. nMC positive integer representing number iterations Monte Carlo simulation (required CalcMethod = 'MC'). gamma1 numeric value 0 1 representing minimum probability declare success. gamma2 numeric value 0 1 representing futility threshold. n1 positive integer representing number patients group 1 proof--concept (PoC) trial. n2 positive integer representing number patients group 2 PoC trial. m1 positive integer representing number patients group 1 future trial data. m2 positive integer representing number patients group 2 future trial data. kappa01 positive numeric value representing prior precision parameter related mean conjugate prior Normal-Inverse-Chi-squared group 1. kappa02 positive numeric value representing prior precision parameter related mean conjugate prior Normal-Inverse-Chi-squared group 2. nu01 positive numeric value representing prior degrees freedom related variance conjugate prior Normal-Inverse-Chi-squared group 1. nu02 positive numeric value representing prior degrees freedom related variance conjugate prior Normal-Inverse-Chi-squared group 2. mu01 numeric value representing prior mean value outcomes group 1 PoC trial. mu02 numeric value representing prior mean value outcomes group 2 PoC trial. sigma01 positive numeric value representing prior standard deviation outcomes group 1. sigma02 positive numeric value representing prior standard deviation outcomes group 2. mu1 numeric value representing true mean outcomes group 1 PoC trial. mu2 numeric value representing true mean outcomes group 2 PoC trial. sigma1 positive numeric value representing true standard deviation outcomes group 1. sigma2 positive numeric value representing true standard deviation outcomes group 2. r positive numeric value representing ratio hypothesized values null hypotheses (required design = 'uncontrolled'). ne1 positive integer representing number patients group 1 external data (can NULL external treatment data). ne2 positive integer representing number patients group 2 external data (can NULL external control data). alpha01 positive numeric value representing scale parameter (power prior) group 1 (required external design, can NULL external treatment data). alpha02 positive numeric value representing scale parameter (power prior) group 2 (required external design, can NULL external control data). bar.ye1 numeric value representing external sample mean group 1 (required external treatment data available). bar.ye2 numeric value representing external sample mean group 2 (required external control data available). se1 positive numeric value representing external sample standard deviation group 1 (required external treatment data available). se2 positive numeric value representing external sample standard deviation group 2 (required external control data available). error_if_Miss logical value; TRUE (default), function stops error positive Miss probability obtained, indicating poorly chosen thresholds. FALSE, function proceeds reports Miss probability based Gray_inc_Miss setting. Gray_inc_Miss logical value; TRUE, Miss probability included Gray probability (Miss reported separately). FALSE (default), Miss probability reported separate category. parameter active error_if_Miss = FALSE. seed numeric value representing seed number reproducible random number generation.","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/pGNGsinglecontinuous.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the Go, NoGo and Gray Probabilities for a Clinical Trial When Outcome is Continuous Under the Bayesian Framework Using Two Metrics — pGNGsinglecontinuous","text":"data frame containing true means groups Go, NoGo, Gray probabilities. error_if_Miss = FALSE Gray_inc_Miss = FALSE, Miss probability also included separate column.","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/pGNGsinglecontinuous.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate the Go, NoGo and Gray Probabilities for a Clinical Trial When Outcome is Continuous Under the Bayesian Framework Using Two Metrics — pGNGsinglecontinuous","text":"function performs Monte Carlo simulation evaluate operating characteristics : Generating random trial data based specified true parameters Computing posterior predictive probabilities simulated trial Classifying trial Go, NoGo, Gray based decision thresholds external control designs, power priors incorporated using exact conjugate representation: Power priors normal data mathematically equivalent Normal-Inverse-Chi-squared distributions enables closed-form computation without MCMC sampling Alpha parameters control degree borrowing (0 = borrowing, 1 = full borrowing) Decision rules: Go: P(treatment effect > threshold) ≥ γ₁ NoGo: P(treatment effect > threshold) ≤ γ₂ Gray: γ₂ < P(treatment effect > threshold) < γ₁ Miss: Go NoGo criteria met simultaneously (indicates poorly chosen thresholds) Handling Miss probability: error_if_Miss = TRUE (default): Function stops error Miss probability > 0, prompting reconsideration thresholds error_if_Miss = FALSE Gray_inc_Miss = TRUE: Miss probability added Gray probability error_if_Miss = FALSE Gray_inc_Miss = FALSE: Miss probability reported separate category","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/pGNGsinglecontinuous.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the Go, NoGo and Gray Probabilities for a Clinical Trial When Outcome is Continuous Under the Bayesian Framework Using Two Metrics — pGNGsinglecontinuous","text":"","code":"# Example 1: Controlled design with vague prior and NI method # (default: error_if_Miss = TRUE, Gray_inc_Miss = FALSE) pGNGsinglecontinuous(   nsim = 100, prob = 'posterior', design = 'controlled', prior = 'vague', CalcMethod = 'NI',   theta.TV = 1.5, theta.MAV = -0.5, theta.NULL = NULL,   nMC = NULL, gamma1 = 0.7, gamma2 = 0.2,   n1 = 15, n2 = 15, m1 = NULL, m2 = NULL,   kappa01 = NULL, kappa02 = NULL, nu01 = NULL, nu02 = NULL,   mu01 = NULL, mu02 = NULL, sigma01 = NULL, sigma02 = NULL,   mu1 = 3, mu2 = 1, sigma1 = 1.2, sigma2 = 1.1,   r = NULL, ne1 = NULL, ne2 = NULL, alpha01 = NULL, alpha02 = NULL,   bar.ye1 = NULL, bar.ye2 = NULL, se1 = NULL, se2 = NULL,   error_if_Miss = TRUE, Gray_inc_Miss = FALSE, seed = 2 ) #>   mu1 mu2   Go Gray NoGo #> 1   3   1 0.73 0.27    0  # Example 2: External design with control data using WS approximation if (FALSE) { # \\dontrun{ pGNGsinglecontinuous(   nsim = 100, prob = 'posterior', design = 'external', prior = 'vague', CalcMethod = 'WS',   theta.TV = 1.0, theta.MAV = 0.0, theta.NULL = NULL,   nMC = NULL, gamma1 = 0.8, gamma2 = 0.2,   n1 = 12, n2 = 12, m1 = NULL, m2 = NULL,   kappa01 = NULL, kappa02 = NULL, nu01 = NULL, nu02 = NULL,   mu01 = NULL, mu02 = NULL, sigma01 = NULL, sigma02 = NULL,   mu1 = 2, mu2 = 0, sigma1 = 1, sigma2 = 1,   r = NULL, ne1 = NULL, ne2 = 20, alpha01 = NULL, alpha02 = 0.5,   bar.ye1 = NULL, bar.ye2 = 0, se1 = NULL, se2 = 1,   error_if_Miss = TRUE, Gray_inc_Miss = FALSE, seed = 4 ) } # }  # Example 3: Controlled design with predictive probability pGNGsinglecontinuous(   nsim = 100, prob = 'predictive', design = 'controlled', prior = 'N-Inv-Chisq', CalcMethod = 'NI',   theta.TV = NULL, theta.MAV = NULL, theta.NULL = 2.0,   nMC = NULL, gamma1 = 0.75, gamma2 = 0.35,   n1 = 15, n2 = 15, m1 = 50, m2 = 50,   kappa01 = 3, kappa02 = 3, nu01 = 4, nu02 = 4,   mu01 = 3.5, mu02 = 1.5, sigma01 = 1.5, sigma02 = 1.5,   mu1 = 3.2, mu2 = 1.3, sigma1 = 1.4, sigma2 = 1.2,   r = NULL, ne1 = NULL, ne2 = NULL, alpha01 = NULL, alpha02 = NULL,   bar.ye1 = NULL, bar.ye2 = NULL, se1 = NULL, se2 = NULL,   error_if_Miss = TRUE, Gray_inc_Miss = FALSE, seed = 3 ) #>   mu1 mu2   Go Gray NoGo #> 1 3.2 1.3 0.04 0.13 0.83  # Example 4: External design with predictive probability using MC method if (FALSE) { # \\dontrun{ pGNGsinglecontinuous(   nsim = 100, prob = 'predictive', design = 'external', prior = 'vague', CalcMethod = 'MC',   theta.TV = NULL, theta.MAV = NULL, theta.NULL = 1.5,   nMC = 5000, gamma1 = 0.7, gamma2 = 0.4,   n1 = 12, n2 = 12, m1 = 30, m2 = 30,   kappa01 = NULL, kappa02 = NULL, nu01 = NULL, nu02 = NULL,   mu01 = NULL, mu02 = NULL, sigma01 = NULL, sigma02 = NULL,   mu1 = 2.5, mu2 = 1.0, sigma1 = 1.3, sigma2 = 1.1,   r = NULL, ne1 = 15, ne2 = 18, alpha01 = 0.6, alpha02 = 0.7,   bar.ye1 = 2.3, bar.ye2 = 0.9, se1 = 1.2, se2 = 1.0,   error_if_Miss = FALSE, Gray_inc_Miss = FALSE, seed = 5 ) } # }  # Example 5: Report Miss probability separately when thresholds may be suboptimal pGNGsinglecontinuous(   nsim = 100, prob = 'posterior', design = 'controlled', prior = 'vague', CalcMethod = 'NI',   theta.TV = 1.0, theta.MAV = 0.8, theta.NULL = NULL,   nMC = NULL, gamma1 = 0.65, gamma2 = 0.55,   n1 = 10, n2 = 10, m1 = NULL, m2 = NULL,   kappa01 = NULL, kappa02 = NULL, nu01 = NULL, nu02 = NULL,   mu01 = NULL, mu02 = NULL, sigma01 = NULL, sigma02 = NULL,   mu1 = 2.5, mu2 = 1.5, sigma1 = 1.0, sigma2 = 1.0,   r = NULL, ne1 = NULL, ne2 = NULL, alpha01 = NULL, alpha02 = NULL,   bar.ye1 = NULL, bar.ye2 = NULL, se1 = NULL, se2 = NULL,   error_if_Miss = FALSE, Gray_inc_Miss = FALSE, seed = 6 ) #>   mu1 mu2   Go Gray NoGo Miss #> 1 2.5 1.5 0.25 0.48 0.27    0  # Example 6: Include Miss probability in Gray when error_if_Miss = FALSE pGNGsinglecontinuous(   nsim = 100, prob = 'posterior', design = 'controlled', prior = 'vague', CalcMethod = 'NI',   theta.TV = 1.0, theta.MAV = 0.8, theta.NULL = NULL,   nMC = NULL, gamma1 = 0.65, gamma2 = 0.55,   n1 = 10, n2 = 10, m1 = NULL, m2 = NULL,   kappa01 = NULL, kappa02 = NULL, nu01 = NULL, nu02 = NULL,   mu01 = NULL, mu02 = NULL, sigma01 = NULL, sigma02 = NULL,   mu1 = 2.5, mu2 = 1.5, sigma1 = 1.0, sigma2 = 1.0,   r = NULL, ne1 = NULL, ne2 = NULL, alpha01 = NULL, alpha02 = NULL,   bar.ye1 = NULL, bar.ye2 = NULL, se1 = NULL, se2 = NULL,   error_if_Miss = FALSE, Gray_inc_Miss = TRUE, seed = 7 ) #>   mu1 mu2   Go Gray NoGo #> 1 2.5 1.5 0.34 0.38 0.28"},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/pINLAdifft.html","id":null,"dir":"Reference","previous_headings":"","what":"Cumulative Distribution Function of the Difference of Two t-Distributed Variables by INLA — pINLAdifft","title":"Cumulative Distribution Function of the Difference of Two t-Distributed Variables by INLA — pINLAdifft","text":"function calculates cumulative distribution function (CDF) difference two independent t-distributed random variables using Integrated Nested Laplace Approximation (INLA) power prior external data. Specifically, computes P(T1 - T2 > q) T1 T2 follow t-distributions estimated current external data.","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/pINLAdifft.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cumulative Distribution Function of the Difference of Two t-Distributed Variables by INLA — pINLAdifft","text":"","code":"pINLAdifft(   nINLAsample,   q,   mu.n1,   mu.n2,   sd.n1,   sd.n2,   n1,   n2,   ne1,   ne2,   alpha01,   alpha02 )"},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/pINLAdifft.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cumulative Distribution Function of the Difference of Two t-Distributed Variables by INLA — pINLAdifft","text":"nINLAsample positive integer representing number iterations INLA sampling. q numeric value representing quantile threshold. mu.n1 numeric value representing mean value normal distribution group 1 PoC external trials. mu.n2 numeric value representing mean value normal distribution group 2 PoC external trials. sd.n1 positive numeric value representing standard deviation normal distribution group 1 PoC external trials. sd.n2 positive numeric value representing standard deviation normal distribution group 2 PoC external trials. n1 positive integer representing sample size group 1 PoC trial. n2 positive integer representing sample size group 2 PoC trial. ne1 positive integer representing sample size group 1 external trial (can NULL external treatment data). ne2 positive integer representing sample size group 2 external trial (can NULL external control data). alpha01 positive numeric value representing scale parameter power prior group 1 (can NULL external treatment data). alpha02 positive numeric value representing scale parameter power prior group 2 (can NULL external control data).","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/pINLAdifft.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cumulative Distribution Function of the Difference of Two t-Distributed Variables by INLA — pINLAdifft","text":"numeric value representing P(T1 - T2 > q), probability difference two t-distributed variables exceeds quantile q.","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/pINLAdifft.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cumulative Distribution Function of the Difference of Two t-Distributed Variables by INLA — pINLAdifft","text":"function uses Integrated Nested Laplace Approximation (INLA) estimate posterior distributions external data available. method involves: Incorporating external data power priors scaling parameters α01 α02 Using INLA fast approximate Bayesian inference Generating posterior samples compute probability interest Supporting flexible combinations external treatment /control data power prior approach allows borrowing strength historical data controlling degree borrowing power parameters. INLA provides computationally efficient approximations compared full MCMC approaches.","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/pINLAdifft.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cumulative Distribution Function of the Difference of Two t-Distributed Variables by INLA — pINLAdifft","text":"","code":"if (FALSE) { # \\dontrun{ # Both external treatment and control data pINLAdifft(nINLAsample = 1e+4, q = 4, mu.n1 = 5, mu.n2 = 0, sd.n1 = 1, sd.n2 = 1,           n1 = 12, n2 = 12, ne1 = 24, ne2 = 24, alpha01 = 0.5, alpha02 = 0.5)  # External control data only pINLAdifft(nINLAsample = 1e+4, q = 4, mu.n1 = 5, mu.n2 = 0, sd.n1 = 1, sd.n2 = 1,           n1 = 12, n2 = 12, ne1 = NULL, ne2 = 24, alpha01 = NULL, alpha02 = 0.5) } # }"},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/pMC2tdiff.html","id":null,"dir":"Reference","previous_headings":"","what":"Cumulative Distribution Function of the Difference of Two t-Distributed Variables by Monte Carlo Simulation — pMC2tdiff","title":"Cumulative Distribution Function of the Difference of Two t-Distributed Variables by Monte Carlo Simulation — pMC2tdiff","text":"function calculates cumulative distribution function (CDF) difference two independent t-distributed random variables using Monte Carlo simulation. method provides flexible approach can handle combination parameters, accuracy improving number simulations increases. Specifically, computes P(T1 - T2 ≤ q) P(T1 - T2 > q) T1 T2 follow t-distributions potentially different location, scale, degrees freedom parameters.","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/pMC2tdiff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cumulative Distribution Function of the Difference of Two t-Distributed Variables by Monte Carlo Simulation — pMC2tdiff","text":"","code":"pMC2tdiff(nMC, q, mu.t1, mu.t2, sd.t1, sd.t2, nu.t1, nu.t2, lower.tail = TRUE)"},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/pMC2tdiff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cumulative Distribution Function of the Difference of Two t-Distributed Variables by Monte Carlo Simulation — pMC2tdiff","text":"nMC positive integer representing number Monte Carlo iterations simulation. Typical values range 10,000 (quick estimates) 100,000+ (high precision). Larger values yield accurate results require computational time. q numeric value representing quantile threshold. mu.t1 numeric value representing location parameter (μ) first t-distribution. mu.t2 numeric value representing location parameter (μ) second t-distribution. sd.t1 positive numeric value representing scale parameter (σ) first t-distribution. sd.t2 positive numeric value representing scale parameter (σ) second t-distribution. nu.t1 positive numeric value representing degrees freedom (ν) first t-distribution. Must > 2 finite variance. nu.t2 positive numeric value representing degrees freedom (ν) second t-distribution. Must > 2 finite variance. lower.tail logical value; TRUE (default), probabilities P(T1 - T2 ≤ q), otherwise P(T1 - T2 > q).","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/pMC2tdiff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cumulative Distribution Function of the Difference of Two t-Distributed Variables by Monte Carlo Simulation — pMC2tdiff","text":"numeric value [0, 1] representing estimated cumulative probability difference two t-distributed variables (lower.tail = TRUE) exceeds (lower.tail = FALSE) quantile q. estimate subject Monte Carlo error decreases √(1/nMC).","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/pMC2tdiff.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cumulative Distribution Function of the Difference of Two t-Distributed Variables by Monte Carlo Simulation — pMC2tdiff","text":"function uses Monte Carlo simulation approximate distribution difference two t-distributed variables. algorithm consists : Step 1: Generate nMC random samples first t-distribution T1 ~ t(μ₁, σ₁², ν₁) Step 2: Generate nMC random samples second t-distribution T2 ~ t(μ₂, σ₂², ν₂) Step 3: Compute difference D = T1 - T2 pair samples Step 4: Calculate empirical probability proportion differences satisfy condition (D > q D ≤ q) Monte Carlo error: standard error estimate approximately √(p(1-p)/nMC), p true probability probability near 0.5, standard error roughly 0.5/√nMC nMC = 10,000: SE ≈ 0.005 (±0.01 95% confidence) nMC = 100,000: SE ≈ 0.0016 (±0.003 95% confidence) Advantages: Highly flexible - works parameter combination Easy understand implement Naturally handles complex scenarios Provides approximate confidence intervals via bootstrap Computational considerations: Computational time scales linearly nMC Suitable moderate precision requirements highest precision, consider numerical integration (pNIdifft) Results stochastic - different runs yield slightly different estimates","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/pMC2tdiff.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cumulative Distribution Function of the Difference of Two t-Distributed Variables by Monte Carlo Simulation — pMC2tdiff","text":"","code":"# Calculate P(t1 - t2 > 3) for equal parameters using 10,000 simulations pMC2tdiff(nMC = 1e4, q = 3, mu.t1 = 2, mu.t2 = 0, sd.t1 = 1, sd.t2 = 1,          nu.t1 = 17, nu.t2 = 17, lower.tail = FALSE) #> [1] 0.2576  # Calculate P(t1 - t2 > 1) for unequal variances using 50,000 simulations pMC2tdiff(nMC = 5e4, q = 1, mu.t1 = 5, mu.t2 = 3, sd.t1 = 2, sd.t2 = 1.5,          nu.t1 = 10, nu.t2 = 15, lower.tail = FALSE) #> [1] 0.65012  # Calculate P(t1 - t2 > 0) with high precision using 100,000 simulations pMC2tdiff(nMC = 1e5, q = 0, mu.t1 = 1, mu.t2 = 0, sd.t1 = 1, sd.t2 = 1,          nu.t1 = 5, nu.t2 = 20, lower.tail = FALSE) #> [1] 0.74238  # Calculate lower tail probability P(t1 - t2 ≤ 2) pMC2tdiff(nMC = 2e4, q = 2, mu.t1 = 3, mu.t2 = 0, sd.t1 = 1.5, sd.t2 = 1.2,          nu.t1 = 12, nu.t2 = 15, lower.tail = TRUE) #> [1] 0.31515"},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/pMCdifft.html","id":null,"dir":"Reference","previous_headings":"","what":"Cumulative Distribution Function of the Difference of Two t-Distributed Variables by Monte Carlo Simulation — pMCdifft","title":"Cumulative Distribution Function of the Difference of Two t-Distributed Variables by Monte Carlo Simulation — pMCdifft","text":"function calculates cumulative distribution function (CDF) difference two independent t-distributed random variables using Monte Carlo simulation. Specifically, computes P(T1 - T2 > q) T1 T2 follow t-distributions potentially different location, scale, degrees freedom parameters.","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/pMCdifft.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cumulative Distribution Function of the Difference of Two t-Distributed Variables by Monte Carlo Simulation — pMCdifft","text":"","code":"pMCdifft(nMC, q, mu.t1, mu.t2, sd.t1, sd.t2, nu.t1, nu.t2)"},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/pMCdifft.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cumulative Distribution Function of the Difference of Two t-Distributed Variables by Monte Carlo Simulation — pMCdifft","text":"nMC positive integer representing number Monte Carlo iterations simulation. q numeric value representing quantile threshold. mu.t1 numeric value representing location parameter first t-distribution. mu.t2 numeric value representing location parameter second t-distribution. sd.t1 positive numeric value representing scale parameter first t-distribution. sd.t2 positive numeric value representing scale parameter second t-distribution. nu.t1 positive numeric value representing degrees freedom first t-distribution. nu.t2 positive numeric value representing degrees freedom second t-distribution.","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/pMCdifft.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cumulative Distribution Function of the Difference of Two t-Distributed Variables by Monte Carlo Simulation — pMCdifft","text":"numeric vector representing P(T1 - T2 > q), probability difference two t-distributed variables exceeds quantile q.","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/pMCdifft.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cumulative Distribution Function of the Difference of Two t-Distributed Variables by Monte Carlo Simulation — pMCdifft","text":"function uses Monte Carlo simulation approximate distribution difference two t-distributed variables. method involves: Generating nMC random samples t-distribution Computing difference pair samples Calculating proportion differences exceed threshold q accuracy increases larger nMC values Monte Carlo simulation provides flexible intuitive approach can handle combination parameters, accuracy depends number simulations. Larger nMC values yield precise estimates require computational time.","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/pMCdifft.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cumulative Distribution Function of the Difference of Two t-Distributed Variables by Monte Carlo Simulation — pMCdifft","text":"","code":"# Calculate P(t1 - t2 > 3) for equal parameters using 10,000 simulations pMCdifft(nMC = 1e+4, q = 3, mu.t1 = 2, mu.t2 = 0, sd.t1 = 1, sd.t2 = 1, nu.t1 = 17, nu.t2 = 17) #> [1] 0.2453  # Calculate P(t1 - t2 > 1) for unequal variances using 50,000 simulations pMCdifft(nMC = 5e+4, q = 1, mu.t1 = 5, mu.t2 = 3, sd.t1 = 2, sd.t2 = 1.5, nu.t1 = 10, nu.t2 = 15) #> [1] 0.64712  # Calculate P(t1 - t2 > 0) for high precision with 100,000 simulations pMCdifft(nMC = 1e+5, q = 0, mu.t1 = 1, mu.t2 = 0, sd.t1 = 1, sd.t2 = 1, nu.t1 = 5, nu.t2 = 20) #> [1] 0.74054"},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/pNI2tdiff.html","id":null,"dir":"Reference","previous_headings":"","what":"Cumulative Distribution Function of the Difference of Two t-Distributed Variables by Numerical Integration — pNI2tdiff","title":"Cumulative Distribution Function of the Difference of Two t-Distributed Variables by Numerical Integration — pNI2tdiff","text":"function calculates cumulative distribution function (CDF) difference two independent t-distributed random variables using exact numerical integration via convolution. method provides accurate results (within numerical precision) compared approximation methods. Specifically, computes P(T1 - T2 ≤ q) P(T1 - T2 > q) T1 T2 follow t-distributions potentially different location, scale, degrees freedom parameters.","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/pNI2tdiff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cumulative Distribution Function of the Difference of Two t-Distributed Variables by Numerical Integration — pNI2tdiff","text":"","code":"pNI2tdiff(q, mu.t1, mu.t2, sd.t1, sd.t2, nu.t1, nu.t2, lower.tail = TRUE)"},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/pNI2tdiff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cumulative Distribution Function of the Difference of Two t-Distributed Variables by Numerical Integration — pNI2tdiff","text":"q numeric value representing quantile threshold. mu.t1 numeric value representing location parameter (μ) first t-distribution. mu.t2 numeric value representing location parameter (μ) second t-distribution. sd.t1 positive numeric value representing scale parameter (σ) first t-distribution. sd.t2 positive numeric value representing scale parameter (σ) second t-distribution. nu.t1 positive numeric value representing degrees freedom (ν) first t-distribution. Must > 2 finite variance. nu.t2 positive numeric value representing degrees freedom (ν) second t-distribution. Must > 2 finite variance. lower.tail logical value; TRUE (default), probabilities P(T1 - T2 ≤ q), otherwise P(T1 - T2 > q).","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/pNI2tdiff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cumulative Distribution Function of the Difference of Two t-Distributed Variables by Numerical Integration — pNI2tdiff","text":"numeric value [0, 1] representing cumulative probability difference two t-distributed variables (lower.tail = TRUE) exceeds (lower.tail = FALSE) quantile q.","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/pNI2tdiff.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cumulative Distribution Function of the Difference of Two t-Distributed Variables by Numerical Integration — pNI2tdiff","text":"function uses exact convolution approach compute distribution difference two t-distributed variables. method involves: Using convolution formula: $$P(T_1 - T_2 \\le q) = \\int_{-\\infty}^{\\infty} f_1(x) \\cdot F_2(x - q) dx$$ \\(f_1(x)\\) probability density function (PDF) first t-distribution \\(F_2(x - q)\\) cumulative distribution function (CDF) second t-distribution evaluated \\(x - q\\) Adaptive integration bounds based distribution characteristics (approximately ±8 standard deviations mean) High-precision numerical integration relative tolerance 1e-6 absolute tolerance 1e-8 Advantages: Provides exact results within numerical precision Handles arbitrary combinations parameters approximations required Computational considerations: computationally intensive approximation methods (e.g., Welch-Satterthwaite) Recommended final analyses accuracy critical exploratory analyses, consider using faster approximation methods","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/pNI2tdiff.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cumulative Distribution Function of the Difference of Two t-Distributed Variables by Numerical Integration — pNI2tdiff","text":"","code":"# Calculate P(t1 - t2 > 3) for equal parameters pNI2tdiff(q = 3, mu.t1 = 2, mu.t2 = 0, sd.t1 = 1, sd.t2 = 1,          nu.t1 = 17, nu.t2 = 17, lower.tail = FALSE) #> [1] 0.24857  # Calculate P(t1 - t2 > 1) for unequal variances pNI2tdiff(q = 1, mu.t1 = 5, mu.t2 = 3, sd.t1 = 2, sd.t2 = 1.5,          nu.t1 = 10, nu.t2 = 15, lower.tail = FALSE) #> [1] 0.6478101  # Calculate P(t1 - t2 > 0) for different degrees of freedom pNI2tdiff(q = 0, mu.t1 = 1, mu.t2 = 1, sd.t1 = 1, sd.t2 = 1,          nu.t1 = 5, nu.t2 = 20, lower.tail = FALSE) #> [1] 0.4999528  # Calculate lower tail probability P(t1 - t2 ≤ 2) pNI2tdiff(q = 2, mu.t1 = 3, mu.t2 = 0, sd.t1 = 1.5, sd.t2 = 1.2,          nu.t1 = 12, nu.t2 = 15, lower.tail = TRUE) #> [1] 0.3100353"},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/pNIdifft.html","id":null,"dir":"Reference","previous_headings":"","what":"Cumulative Distribution Function of the Difference of Two t-Distributed Variables by Numerical Integration — pNIdifft","title":"Cumulative Distribution Function of the Difference of Two t-Distributed Variables by Numerical Integration — pNIdifft","text":"function calculates cumulative distribution function (CDF) difference two independent t-distributed random variables using numerical integration via convolution. Specifically, computes P(T1 - T2 ≥ q) T1 T2 follow t-distributions potentially different location, scale, degrees freedom parameters.","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/pNIdifft.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cumulative Distribution Function of the Difference of Two t-Distributed Variables by Numerical Integration — pNIdifft","text":"","code":"pNIdifft(q, mu.t1, mu.t2, sd.t1, sd.t2, nu.t1, nu.t2)"},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/pNIdifft.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cumulative Distribution Function of the Difference of Two t-Distributed Variables by Numerical Integration — pNIdifft","text":"q numeric value representing quantile threshold. mu.t1 numeric value representing location parameter first t-distribution. mu.t2 numeric value representing location parameter second t-distribution. sd.t1 positive numeric value representing scale parameter first t-distribution. sd.t2 positive numeric value representing scale parameter second t-distribution. nu.t1 positive numeric value representing degrees freedom first t-distribution. nu.t2 positive numeric value representing degrees freedom second t-distribution.","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/pNIdifft.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cumulative Distribution Function of the Difference of Two t-Distributed Variables by Numerical Integration — pNIdifft","text":"numeric vector representing P(T1 - T2 ≥ q), probability difference two t-distributed variables greater equal quantile q.","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/pNIdifft.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cumulative Distribution Function of the Difference of Two t-Distributed Variables by Numerical Integration — pNIdifft","text":"function uses exact convolution approach compute distribution difference two t-distributed variables. method involves: Using convolution formula: $$P(T_1 - T_2 ≥ q) = \\int_{-\\infty}^{\\infty} f_1(x) \\cdot F_2(x - q) dx$$ \\(f_1(x)\\) PDF first t-distribution \\(F_2(x - q)\\) CDF second t-distribution evaluated \\(x - q\\) Adaptive integration bounds based distribution characteristics High-precision numerical integration specified tolerances approach provides exact results (within numerical precision) computationally intensive approximation methods like Welch-Satterthwaite.","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/pNIdifft.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cumulative Distribution Function of the Difference of Two t-Distributed Variables by Numerical Integration — pNIdifft","text":"","code":"# Calculate P(t1 - t2 ≥ 3) for equal parameters pNIdifft(q = 3, mu.t1 = 2, mu.t2 = 0, sd.t1 = 1, sd.t2 = 1, nu.t1 = 17, nu.t2 = 17) #> [1] 0.24857  # Calculate P(t1 - t2 ≥ 1) for unequal variances pNIdifft(q = 1, mu.t1 = 5, mu.t2 = 3, sd.t1 = 2, sd.t2 = 1.5, nu.t1 = 10, nu.t2 = 15) #> [1] 0.6478101"},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/pPPsinglebinary.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Bayesian Posterior Probability or Posterior Predictive Probability for a Clinical Trial with a Single Binary Endpoint — pPPsinglebinary","title":"Calculate Bayesian Posterior Probability or Posterior Predictive Probability for a Clinical Trial with a Single Binary Endpoint — pPPsinglebinary","text":"function computes Bayesian posterior probability posterior predictive probability binary outcome clinical trials. function supports controlled, uncontrolled, external control designs, using beta-binomial conjugate priors. External data can incorporated power priors.","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/pPPsinglebinary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Bayesian Posterior Probability or Posterior Predictive Probability for a Clinical Trial with a Single Binary Endpoint — pPPsinglebinary","text":"","code":"pPPsinglebinary(   prob = \"posterior\",   design = \"controlled\",   theta0,   n1,   n2,   y1,   y2,   a1,   a2,   b1,   b2,   m1,   m2,   ne1,   ne2,   ye1,   ye2,   ae1,   ae2,   lower.tail = TRUE )"},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/pPPsinglebinary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Bayesian Posterior Probability or Posterior Predictive Probability for a Clinical Trial with a Single Binary Endpoint — pPPsinglebinary","text":"prob character string specifying type probability calculate. Options 'posterior' posterior probability 'predictive' posterior predictive probability. design character string specifying type trial design. Options 'controlled' randomized controlled trials, 'uncontrolled' single-arm studies, 'external' designs incorporating external data. theta0 numeric value representing pre-specified threshold value treatment effect (difference response rates). n1 positive integer representing number patients group 1 (treatment) proof--concept (PoC) trial. n2 positive integer representing number patients group 2 (control) PoC trial. y1 non-negative integer representing observed number responders group 1 PoC trial (must satisfy 0 ≤ y1 ≤ n1). y2 non-negative integer representing observed number responders group 2 PoC trial (must satisfy 0 ≤ y2 ≤ n2). a1 positive numeric value representing first shape parameter (α) prior beta distribution group 1. a2 positive numeric value representing first shape parameter (α) prior beta distribution group 2. b1 positive numeric value representing second shape parameter (β) prior beta distribution group 1. b2 positive numeric value representing second shape parameter (β) prior beta distribution group 2. m1 positive integer representing number patients group 1 future trial (required prob = 'predictive'). m2 positive integer representing number patients group 2 future trial (required prob = 'predictive'). ne1 positive integer representing number patients group 1 external data (required design = 'external'). ne2 positive integer representing number patients group 2 external data (required design = 'external'). ye1 non-negative integer representing observed number responders group 1 external data (required design = 'external'). ye2 non-negative integer representing observed number responders group 2 external data (required design = 'external'). ae1 numeric value (0, 1] representing power prior scale parameter group 1 (required design = 'external'). Controls degree borrowing: 0 = borrowing, 1 = full borrowing. ae2 numeric value (0, 1] representing power prior scale parameter group 2 (required design = 'external'). Controls degree borrowing: 0 = borrowing, 1 = full borrowing. lower.tail logical value; TRUE (default), probabilities P(treatment effect ≤ theta0), otherwise P(treatment effect > theta0).","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/pPPsinglebinary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Bayesian Posterior Probability or Posterior Predictive Probability for a Clinical Trial with a Single Binary Endpoint — pPPsinglebinary","text":"numeric value [0, 1] representing Bayesian posterior probability posterior predictive probability treatment effect exceeds () threshold theta0.","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/pPPsinglebinary.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Bayesian Posterior Probability or Posterior Predictive Probability for a Clinical Trial with a Single Binary Endpoint — pPPsinglebinary","text":"function computes probabilities based beta-binomial conjugate analysis: Prior: proportion responders (πj) group (j = 1, 2) follows beta distribution: πj ~ Beta(aj, bj) Posterior: observing data, posterior distribution also beta: πj | yj ~ Beta(aj + yj, bj + nj - yj) Posterior predictive: predictive distribution future trial data follows beta-binomial distribution external control designs, power priors used incorporate historical data. effective prior becomes Beta(aj + aej × yej, bj + aej × (nej - yej)), aej controls degree borrowing (0 = ignore external data, 1 = full weight). Probability types: Posterior probability: P(π1 - π2 > theta0 | current data) Posterior predictive probability: P(future trial success | current data)","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/pPPsinglebinary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Bayesian Posterior Probability or Posterior Predictive Probability for a Clinical Trial with a Single Binary Endpoint — pPPsinglebinary","text":"","code":"# Calculate posterior probability for controlled design pPPsinglebinary(   prob = 'posterior', design = 'controlled', theta0 = 0.15,   n1 = 12, n2 = 15, y1 = 7, y2 = 5, a1 = 0.5, a2 = 0.5, b1 = 0.5, b2 = 0.5,   m1 = NULL, m2 = NULL, ne1 = NULL, ne2 = NULL, ye1 = NULL, ye2 = NULL,   ae1 = NULL, ae2 = NULL, lower.tail = FALSE ) #> [1] 0.6860634  # Calculate posterior predictive probability for controlled design pPPsinglebinary(   prob = 'predictive', design = 'controlled', theta0 = 0.1,   n1 = 12, n2 = 15, y1 = 7, y2 = 5, a1 = 0.5, a2 = 0.5, b1 = 0.5, b2 = 0.5,   m1 = 30, m2 = 30, ne1 = NULL, ne2 = NULL, ye1 = NULL, ye2 = NULL,   ae1 = NULL, ae2 = NULL, lower.tail = FALSE ) #> [1] 0.710533  # Calculate posterior probability with external control data (50% borrowing) pPPsinglebinary(   prob = 'posterior', design = 'external', theta0 = 0.15,   n1 = 12, n2 = 15, y1 = 7, y2 = 9, a1 = 0.5, a2 = 0.5, b1 = 0.5, b2 = 0.5,   m1 = NULL, m2 = NULL, ne1 = 12, ne2 = 12, ye1 = 6, ye2 = 6,   ae1 = 0.5, ae2 = 0.5, lower.tail = FALSE ) #> [1] 0.1399401  # Calculate posterior predictive probability with external control pPPsinglebinary(   prob = 'predictive', design = 'external', theta0 = 0.05,   n1 = 12, n2 = 15, y1 = 7, y2 = 7, a1 = 0.5, a2 = 0.5, b1 = 0.5, b2 = 0.5,   m1 = 12, m2 = 12, ne1 = 12, ne2 = 12, ye1 = 6, ye2 = 6,   ae1 = 0.5, ae2 = 0.5, lower.tail = FALSE ) #> [1] 0.5559926"},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/pPPsinglecontinuous.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Bayesian Posterior Probability or Bayesian Posterior Predictive Probability for a Clinical Trial When Outcome is Continuous — pPPsinglecontinuous","title":"Calculate Bayesian Posterior Probability or Bayesian Posterior Predictive Probability for a Clinical Trial When Outcome is Continuous — pPPsinglecontinuous","text":"function computes Bayesian posterior probability posterior predictive probability continuous outcome clinical trials. function supports controlled, uncontrolled, external control designs Normal-Inverse-Chi-squared vague priors, using three calculation methods: numerical integration, Monte Carlo simulation, Welch-Satterthwaite approximation. external control designs, power priors incorporated using exact conjugate representation Normal-Inverse-Chi-squared distributions, enabling closed-form computation without MCMC sampling.","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/pPPsinglecontinuous.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Bayesian Posterior Probability or Bayesian Posterior Predictive Probability for a Clinical Trial When Outcome is Continuous — pPPsinglecontinuous","text":"","code":"pPPsinglecontinuous(   prob = \"posterior\",   design = \"controlled\",   prior = \"vague\",   CalcMethod = \"NI\",   theta0,   nMC = NULL,   n1,   n2,   m1 = NULL,   m2 = NULL,   kappa01 = NULL,   kappa02 = NULL,   nu01 = NULL,   nu02 = NULL,   mu01 = NULL,   mu02 = NULL,   sigma01 = NULL,   sigma02 = NULL,   bar.y1,   bar.y2,   s1,   s2,   r = NULL,   ne1 = NULL,   ne2 = NULL,   alpha01 = NULL,   alpha02 = NULL,   bar.ye1 = NULL,   bar.ye2 = NULL,   se1 = NULL,   se2 = NULL,   lower.tail = TRUE )"},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/pPPsinglecontinuous.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Bayesian Posterior Probability or Bayesian Posterior Predictive Probability for a Clinical Trial When Outcome is Continuous — pPPsinglecontinuous","text":"prob character string specifying type probability use (prob = 'posterior' prob = 'predictive'). design character string specifying type trial design (design = 'controlled', design = 'uncontrolled', design = 'external'). prior character string specifying prior distribution (prior = 'N-Inv-Chisq' prior = 'vague'). CalcMethod character string specifying calculation method (CalcMethod = 'NI' numerical integration, CalcMethod = 'MC' Monte Carlo method, CalcMethod = 'WS' Welch-Satterthwaite approximation). theta0 numeric value representing pre-specified threshold value. nMC positive integer representing number iterations Monte Carlo simulation (required CalcMethod = 'MC'). n1 positive integer representing number patients group 1 PoC trial. n2 positive integer representing number patients group 2 PoC trial. m1 positive integer representing number patients group 1 future trial data. m2 positive integer representing number patients group 2 future trial data. kappa01 positive numeric value representing prior precision parameter related mean conjugate prior Normal-Inverse-Chi-squared group 1. kappa02 positive numeric value representing prior precision parameter related mean conjugate prior Normal-Inverse-Chi-squared group 2. nu01 positive numeric value representing prior degrees freedom related variance conjugate prior Normal-Inverse-Chi-squared group 1. nu02 positive numeric value representing prior degrees freedom related variance conjugate prior Normal-Inverse-Chi-squared group 2. mu01 numeric value representing prior mean value outcomes group 1 PoC trial. mu02 numeric value representing prior mean value outcomes group 2 PoC trial. sigma01 positive numeric value representing prior standard deviation outcomes group 1. sigma02 positive numeric value representing prior standard deviation outcomes group 2. bar.y1 numeric value representing sample mean group 1. bar.y2 numeric value representing sample mean group 2. s1 positive numeric value representing sample standard deviation group 1. s2 positive numeric value representing sample standard deviation group 2. r positive numeric value representing ratio hypothesized values null hypotheses (required design = 'uncontrolled'). ne1 positive integer representing number patients group 1 external data (required external treatment data available). ne2 positive integer representing number patients group 2 external data (required external control data available). alpha01 numeric value [0, 1]: representing scale parameter (power prior) group 1 (required external treatment data available). Controls degree borrowing: 0 = borrowing, 1 = full borrowing. alpha02 numeric value [0, 1] representing scale parameter (power prior) group 2 (required external control data available). Controls degree borrowing: 0 = borrowing, 1 = full borrowing. bar.ye1 numeric value representing external sample mean group 1 (required external treatment data available). bar.ye2 numeric value representing external sample mean group 2 (required external control data available). se1 positive numeric value representing external sample standard deviation group 1 (required external treatment data available). se2 positive numeric value representing external sample standard deviation group 2 (required external control data available). lower.tail logical; TRUE (default), probabilities P(theta <= theta0), otherwise, P(theta > theta0)","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/pPPsinglecontinuous.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Bayesian Posterior Probability or Bayesian Posterior Predictive Probability for a Clinical Trial When Outcome is Continuous — pPPsinglecontinuous","text":"numeric vector representing Bayesian posterior probability Bayesian posterior predictive probability. function can handle vectorized inputs.","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/pPPsinglecontinuous.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Bayesian Posterior Probability or Bayesian Posterior Predictive Probability for a Clinical Trial When Outcome is Continuous — pPPsinglecontinuous","text":"function can obtain: Bayesian posterior probability Bayesian posterior predictive probability Prior distribution mean variance outcomes treatment group (k=1,2) can either (1) Normal-Inverse-Chi-squared (2) Vague. posterior distribution posterior predictive distribution outcome treatment group follows t-distribution. controlled uncontrolled designs, three calculation methods available: NI: Numerical integration method exact computation MC: Monte Carlo simulation flexible approximation WS: Welch-Satterthwaite approximation computational efficiency external control designs, power priors incorporated using exact conjugate representation: Power priors normal data mathematically equivalent Normal-Inverse-Chi-squared distributions enables closed-form posterior computation without MCMC sampling Alpha parameters control degree borrowing (0 = borrowing, 1 = full borrowing) method preserves complete Bayesian rigor approximation external design supports: External control data (ne2, alpha02, bar.ye2, se2) External treatment data (ne1, alpha01, bar.ye1, se1) external control treatment data","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/pPPsinglecontinuous.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Bayesian Posterior Probability or Bayesian Posterior Predictive Probability for a Clinical Trial When Outcome is Continuous — pPPsinglecontinuous","text":"","code":"# Example 1: Numerical Integration (NI) method with N-Inv-Chisq prior pPPsinglecontinuous(   prob = 'posterior', design = 'controlled', prior = 'N-Inv-Chisq', CalcMethod = 'NI',   theta0 = 2, n1 = 12, n2 = 12, kappa01 = 5, kappa02 = 5, nu01 = 5, nu02 = 5,   mu01 = 5, mu02 = 5, sigma01 = sqrt(5), sigma02 = sqrt(5),   bar.y1 = 2, bar.y2 = 0, s1 = 1, s2 = 1, lower.tail = FALSE ) #> [1] 0.4167132  # Example 2: Monte Carlo (MC) method with vague prior pPPsinglecontinuous(   prob = 'posterior', design = 'controlled', prior = 'vague', CalcMethod = 'MC',   theta0 = 1, nMC = 10000, n1 = 12, n2 = 12,   bar.y1 = 3, bar.y2 = 1, s1 = 1.5, s2 = 1.2, lower.tail = FALSE ) #> [1] 0.9501  # Example 3: Welch-Satterthwaite (WS) approximation with N-Inv-Chisq prior pPPsinglecontinuous(   prob = 'predictive', design = 'controlled', prior = 'N-Inv-Chisq', CalcMethod = 'WS',   theta0 = 0.5, n1 = 15, n2 = 15, m1 = 100, m2 = 100,   kappa01 = 3, kappa02 = 3, nu01 = 4, nu02 = 4, mu01 = 2, mu02 = 2,   sigma01 = 2, sigma02 = 2, bar.y1 = 2.5, bar.y2 = 1.8, s1 = 1.8, s2 = 1.6, lower.tail = FALSE ) #> [1] 0.5429566  # Example 4: External control design with power prior (NI method) pPPsinglecontinuous(   prob = 'posterior', design = 'external', prior = 'vague', CalcMethod = 'NI',   theta0 = 1.5, n1 = 12, n2 = 12, bar.y1 = 4, bar.y2 = 2, s1 = 1.2, s2 = 1.1,   ne2 = 20, alpha02 = 0.5, bar.ye2 = 1.8, se2 = 1.0, lower.tail = FALSE ) #> [1] 0.9116773  # Example 5: External design with both treatment and control data pPPsinglecontinuous(   prob = 'posterior', design = 'external', prior = 'N-Inv-Chisq', CalcMethod = 'WS',   theta0 = 1.0, n1 = 15, n2 = 15, bar.y1 = 3.5, bar.y2 = 2.0, s1 = 1.3, s2 = 1.1,   kappa01 = 2, kappa02 = 2, nu01 = 3, nu02 = 3, mu01 = 3, mu02 = 2,   sigma01 = 1.5, sigma02 = 1.5,   ne1 = 25, ne2 = 25, alpha01 = 0.7, alpha02 = 0.7,   bar.ye1 = 3.2, bar.ye2 = 1.9, se1 = 1.4, se2 = 1.2, lower.tail = FALSE ) #> [1] 0.8868462"},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/pWS2tdiff.html","id":null,"dir":"Reference","previous_headings":"","what":"Cumulative Distribution Function of the Difference of Two t-Distributed Variables Using the Welch-Satterthwaite Approximation — pWS2tdiff","title":"Cumulative Distribution Function of the Difference of Two t-Distributed Variables Using the Welch-Satterthwaite Approximation — pWS2tdiff","text":"function calculates cumulative distribution function (CDF) difference two independent t-distributed random variables using Welch-Satterthwaite approximation. method provides fast reasonably accurate approximation, particularly useful unequal variances degrees freedom. Specifically, computes P(T1 - T2 ≤ q) P(T1 - T2 > q) T1 T2 follow t-distributions potentially different parameters.","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/pWS2tdiff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cumulative Distribution Function of the Difference of Two t-Distributed Variables Using the Welch-Satterthwaite Approximation — pWS2tdiff","text":"","code":"pWS2tdiff(q, mu.t1, mu.t2, sd.t1, sd.t2, nu.t1, nu.t2, lower.tail = TRUE)"},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/pWS2tdiff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cumulative Distribution Function of the Difference of Two t-Distributed Variables Using the Welch-Satterthwaite Approximation — pWS2tdiff","text":"q numeric value representing quantile threshold. mu.t1 numeric value representing location parameter (μ) first t-distribution. mu.t2 numeric value representing location parameter (μ) second t-distribution. sd.t1 positive numeric value representing scale parameter (σ) first t-distribution. sd.t2 positive numeric value representing scale parameter (σ) second t-distribution. nu.t1 positive numeric value representing degrees freedom (ν) first t-distribution. Must > 2 finite variance. nu.t2 positive numeric value representing degrees freedom (ν) second t-distribution. Must > 2 finite variance. lower.tail logical value; TRUE (default), probabilities P(T1 - T2 ≤ q), otherwise P(T1 - T2 > q).","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/pWS2tdiff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cumulative Distribution Function of the Difference of Two t-Distributed Variables Using the Welch-Satterthwaite Approximation — pWS2tdiff","text":"numeric value [0, 1] representing cumulative probability difference two t-distributed variables (lower.tail = TRUE) exceeds (lower.tail = FALSE) quantile q.","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/pWS2tdiff.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cumulative Distribution Function of the Difference of Two t-Distributed Variables Using the Welch-Satterthwaite Approximation — pWS2tdiff","text":"Welch-Satterthwaite approximation approximates distribution difference two t-distributed variables using single t-distribution adjusted parameters. method involves: Step 1: Calculate pooled variance (sum squared scale parameters): $$\\sigma_{\\text{pooled}}^2 = \\sigma_1^2 + \\sigma_2^2$$ Step 2: Calculate effective degrees freedom using Welch-Satterthwaite formula: $$\\nu^* = \\frac{(\\sigma_1^2 + \\sigma_2^2)^2}{\\frac{\\sigma_1^4}{\\nu_1} + \\frac{\\sigma_2^4}{\\nu_2}}$$ Step 3: Standardize quantile: $$q_{\\text{standardized}} = \\frac{q - (\\mu_1 - \\mu_2)}{\\sqrt{\\sigma_1^2 + \\sigma_2^2}}$$ Step 4: Compute CDF using single t-distribution effective degrees freedom ν* Advantages: Computationally fast efficient Works well unequal variances degrees freedom Provides good approximation practical scenarios Particularly accurate degrees freedom small (ν > 5) Computational considerations: Much faster numerical integration methods Suitable exploratory analyses large-scale simulations final analyses requiring highest accuracy, consider using numerical integration (pNIdifft)","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/pWS2tdiff.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cumulative Distribution Function of the Difference of Two t-Distributed Variables Using the Welch-Satterthwaite Approximation — pWS2tdiff","text":"","code":"# Calculate P(t1 - t2 > 3) for equal parameters pWS2tdiff(q = 3, mu.t1 = 2, mu.t2 = 0, sd.t1 = 1, sd.t2 = 1,          nu.t1 = 17, nu.t2 = 17, lower.tail = FALSE) #> [1] 0.2421594  # Calculate P(t1 - t2 > 1) for unequal variances pWS2tdiff(q = 1, mu.t1 = 5, mu.t2 = 3, sd.t1 = 2, sd.t2 = 1.5,          nu.t1 = 10, nu.t2 = 15, lower.tail = FALSE) #> [1] 0.6533185  # Calculate P(t1 - t2 > 0) for different degrees of freedom - should be ~0.5 pWS2tdiff(q = 0, mu.t1 = 1, mu.t2 = 1, sd.t1 = 1, sd.t2 = 1,          nu.t1 = 5, nu.t2 = 20, lower.tail = FALSE) #> [1] 0.5  # Calculate lower tail probability P(t1 - t2 ≤ 2) pWS2tdiff(q = 2, mu.t1 = 3, mu.t2 = 0, sd.t1 = 1.5, sd.t2 = 1.2,          nu.t1 = 12, nu.t2 = 15, lower.tail = TRUE) #> [1] 0.3036847"},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/pWSdifft.html","id":null,"dir":"Reference","previous_headings":"","what":"Cumulative Distribution Function of the Welch-Satterthwaite Approximated Difference of Two t-Distributed Variables — pWSdifft","title":"Cumulative Distribution Function of the Welch-Satterthwaite Approximated Difference of Two t-Distributed Variables — pWSdifft","text":"function calculates cumulative distribution function (CDF) difference two independent t-distributed random variables using Welch-Satterthwaite approximation. Specifically, computes P(T1 - T2 > q) T1 T2 follow t-distributions potentially different degrees freedom scale parameters.","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/pWSdifft.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cumulative Distribution Function of the Welch-Satterthwaite Approximated Difference of Two t-Distributed Variables — pWSdifft","text":"","code":"pWSdifft(q, mu.t1, mu.t2, sd.t1, sd.t2, nu.t1, nu.t2)"},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/pWSdifft.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cumulative Distribution Function of the Welch-Satterthwaite Approximated Difference of Two t-Distributed Variables — pWSdifft","text":"q numeric value representing quantile threshold. mu.t1 numeric value representing location parameter first t-distribution. mu.t2 numeric value representing location parameter second t-distribution. sd.t1 positive numeric value representing scale parameter first t-distribution. sd.t2 positive numeric value representing scale parameter second t-distribution. nu.t1 positive numeric value representing degrees freedom first t-distribution. nu.t2 positive numeric value representing degrees freedom second t-distribution.","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/pWSdifft.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cumulative Distribution Function of the Welch-Satterthwaite Approximated Difference of Two t-Distributed Variables — pWSdifft","text":"numeric value representing P(T1 - T2 > q), probability difference two t-distributed variables exceeds quantile q.","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/pWSdifft.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cumulative Distribution Function of the Welch-Satterthwaite Approximated Difference of Two t-Distributed Variables — pWSdifft","text":"Welch-Satterthwaite approximation used approximate distribution difference two t-distributed variables. method involves: Calculating effective degrees freedom using Welch-Satterthwaite formula: $$\\nu^* = \\frac{(s_1^2 + s_2^2)^2}{\\frac{s_1^4}{\\nu_1} + \\frac{s_2^4}{\\nu_2}}$$ Using single t-distribution adjusted parameters approximate difference Computing standardized quantile applying t-distribution CDF approximation particularly useful unequal variances degrees freedom, providing computationally efficient alternative exact convolution methods.","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/reference/pWSdifft.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cumulative Distribution Function of the Welch-Satterthwaite Approximated Difference of Two t-Distributed Variables — pWSdifft","text":"","code":"# Calculate P(t1 - t2 > 3) for equal parameters pWSdifft(q = 3, mu.t1 = 2, mu.t2 = 0, sd.t1 = 1, sd.t2 = 1, nu.t1 = 17, nu.t2 = 17) #> [1] 0.2421594  # Calculate P(t1 - t2 > 1) for unequal variances pWSdifft(q = 1, mu.t1 = 5, mu.t2 = 3, sd.t1 = 2, sd.t2 = 1.5, nu.t1 = 10, nu.t2 = 15) #> [1] 0.6533185  # Calculate P(t1 - t2 > 0) for different degrees of freedom pWSdifft(q = 0, mu.t1 = 1, mu.t2 = 1, sd.t1 = 1, sd.t2 = 1, nu.t1 = 5, nu.t2 = 20) #> [1] 0.5"},{"path":[]},{"path":"https://gosukehommaEX.github.io/BayesianQDM/news/index.html","id":"initial-release-0-1-0","dir":"Changelog","previous_headings":"","what":"Initial Release","title":"BayesianQDM 0.1.0","text":"initial release BayesianQDM provides comprehensive framework Bayesian decision-making clinical trials support binary continuous endpoints.","code":""},{"path":[]},{"path":"https://gosukehommaEX.github.io/BayesianQDM/news/index.html","id":"binary-endpoints-0-1-0","dir":"Changelog","previous_headings":"Initial Release > Core Functions","what":"Binary Endpoints","title":"BayesianQDM 0.1.0","text":"pPPsinglebinary() - Posterior posterior predictive probability calculation pGNGsinglebinary() - Go/NoGo/Gray decision probability framework p2betadiff() - Beta distribution differences p2betabinomdiff() - Beta-Binomial distribution differences d2betadiff() - Density function beta distribution differences","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/news/index.html","id":"continuous-endpoints-0-1-0","dir":"Changelog","previous_headings":"Initial Release > Core Functions","what":"Continuous Endpoints","title":"BayesianQDM 0.1.0","text":"pPPsinglecontinuous() - Posterior posterior predictive probability calculation pGNGsinglecontinuous() - Go/NoGo/Gray decision probability framework pNI2tdiff() - Numerical integration method pMC2tdiff() - Monte Carlo simulation method pWS2tdiff() - Welch-Satterthwaite approximation method","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/news/index.html","id":"utility-functions-0-1-0","dir":"Changelog","previous_headings":"Initial Release > Core Functions","what":"Utility Functions","title":"BayesianQDM 0.1.0","text":"AppellsF1() - Appell’s hypergeometric function F1 numerical calculations","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/news/index.html","id":"study-designs-0-1-0","dir":"Changelog","previous_headings":"Initial Release","what":"Study Designs","title":"BayesianQDM 0.1.0","text":"Controlled design - Standard randomized controlled trials Uncontrolled design - Single-arm studies historical controls External control design - Power prior incorporation historical data","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/news/index.html","id":"prior-distributions-0-1-0","dir":"Changelog","previous_headings":"Initial Release","what":"Prior Distributions","title":"BayesianQDM 0.1.0","text":"Binary endpoints - Beta priors flexible parameterization Continuous endpoints - Normal-Inverse-Chi-squared conjugate priors vague priors","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/news/index.html","id":"calculation-methods-0-1-0","dir":"Changelog","previous_headings":"Initial Release","what":"Calculation Methods","title":"BayesianQDM 0.1.0","text":"NI (Numerical Integration) - Exact calculation using convolution WS (Welch-Satterthwaite) - Fast approximation unequal variances MC (Monte Carlo) - Simulation-based flexible approach","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/news/index.html","id":"documentation-0-1-0","dir":"Changelog","previous_headings":"Initial Release","what":"Documentation","title":"BayesianQDM 0.1.0","text":"Comprehensive function documentation examples Introduction BayesianQDM Binary endpoints analysis Continuous endpoints analysis Complete test suite using testthat","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/news/index.html","id":"dependencies-0-1-0","dir":"Changelog","previous_headings":"Initial Release","what":"Dependencies","title":"BayesianQDM 0.1.0","text":"Base R stats functions Suggested packages: testthat, knitr, rmarkdown, dplyr, ggplot2, tidyr, purrr Compatible tidyverse ecosystem data manipulation visualization","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/news/index.html","id":"quality-assurance-0-1-0","dir":"Changelog","previous_headings":"Initial Release","what":"Quality Assurance","title":"BayesianQDM 0.1.0","text":"Extensive test coverage core functions Input validation informative error messages Numerical precision checks method comparisons Operating characteristics validation","code":""},{"path":"https://gosukehommaEX.github.io/BayesianQDM/news/index.html","id":"future-development-0-1-0","dir":"Changelog","previous_headings":"","what":"Future Development","title":"BayesianQDM 0.1.0","text":"Planned features future releases: * Additional calculation methods complex scenarios * Enhanced visualization functions * Adaptive design utilities * Extended external data incorporation methods * Performance optimizations large-scale simulations","code":""}]
