% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/BayesDecisionProbContinuous.R
\name{BayesDecisionProbContinuous}
\alias{BayesDecisionProbContinuous}
\title{Calculate the Go, NoGo and Gray probabilities for a clinical trial when outcome is continuous
under the Bayesian framework using two metrics:
(i)  posterior probability for the treatment effect to be greater than a threshold, and
(ii) posterior predictive probability of phase III study success.}
\usage{
BayesDecisionProbContinuous(
  nsim,
  prob,
  design,
  prior,
  CalcMethod,
  theta.TV,
  theta.MAV,
  theta.NULL,
  nMC,
  gamma1,
  gamma2,
  n1,
  n2,
  m1,
  m2,
  kappa01,
  kappa02,
  nu01,
  nu02,
  mu01,
  mu02,
  sigma01,
  sigma02,
  mu1,
  mu2,
  sigma1,
  sigma2,
  r,
  seed
)
}
\arguments{
\item{nsim}{A numeric value of the number of iterations for calculating posterior/posterior predictive probability.}

\item{prob}{A type of probability (i.e., \code{prob='posterior'} or \code{prob='predictive'}).}

\item{design}{A type of trial design (i.e., \code{design='controlled'} or \code{prob='uncontrolled'}).}

\item{prior}{A prior distribution (i.e., \code{prior='N-Inv-Chisq'} or \code{prior='vague'}).}

\item{CalcMethod}{An option to select a calculation method (\code{CalcMethod=NI} (numerical integration method), \code{CalcMethod=MC} (Monte Carlo method), or \code{CalcMethod=WS} (WS approximation)).}

\item{theta.TV}{A numeric pre-specified threshold value for calculating Go probability when \code{prob='posterior'}.}

\item{theta.MAV}{A numeric pre-specified threshold value for calculating NoGo probability when \code{prob='posterior'}.}

\item{theta.NULL}{A numeric pre-specified threshold value for calculating Go/NoGo probabilities when \code{prob='predictive'}.}

\item{nMC}{A number of iterations for Monte Carlo simulation (a numeric value is set only if \code{CalcMethod=MC}).}

\item{gamma1}{A numeric value of a minimum probability to declare success.}

\item{gamma2}{A numeric value of a futility threshold.}

\item{n1}{A number of patients in group 1 for a proof-of-concept (PoC) trial.}

\item{n2}{A number of patients in group 2 for the PoC trial.}

\item{m1}{A number of patients in group 1 for the future trial data.}

\item{m2}{A number of patients in group 2 for the future trial data.}

\item{kappa01}{A true value related to the mean for conjugate prior of Normal-Inverse-X^2 in group 1.}

\item{kappa02}{A true value related to the mean for conjugate prior of Normal-Inverse-X^2 in group 2.}

\item{nu01}{A true value related to the variance for conjugate prior of Normal-Inverse-X^2 in group 1.}

\item{nu02}{A true value related to the variance for conjugate prior of Normal-Inverse-X^2 in group 2.}

\item{mu01}{A true mean value of outcomes in group 1 for the PoC trial.}

\item{mu02}{A true mean value of outcomes in group 2 for the PoC trial.}

\item{sigma01}{A true standard deviation value of outcomes in group 1 for the PoC trial.}

\item{sigma02}{A true standard deviation value of outcomes in group 2 for the PoC trial.}

\item{mu1}{A true mean of group 1 for PoC trial.}

\item{mu2}{A true mean of group 2 for PoC trial.}

\item{sigma1}{A true standard deviation of group 1 for PoC trial.}

\item{sigma2}{A true standard deviation of group 2 for PoC trial.}

\item{r}{A parameter value associated with the distribution of mean for group 2 When \code{prob='uncontrolled'}.}

\item{seed}{A numeric value of the seed number.}
}
\value{
The \code{BayesDecisionProbContinuous} gives the dataframe including the
true means for both groups, and the Go, NoGo and Gray probabilities.
}
\description{
The function can obtain:
\itemize{
\item Go probability
\item NoGo probability
\item Gray probability
}
The function can be used for controlled design and uncontrolled design.
}
\examples{
BayesDecisionProbContinuous(
  nsim = 1000, prob = 'posterior', design = 'controlled', prior = 'N-Inv-Chisq', CalcMethod = 'NI',
  theta.TV = 2, theta.MAV = 0, theta.NULL = NULL, nMC = NULL, gamma1 = 0.8, gamma2 = 0.3,
  n1 = 12, n2 = 12, m1 = NULL, m2 = NULL, kappa01 = 5, kappa02 = 5, nu01 = 5, nu02 = 5,
  mu01 = 5, mu02 = 5, sigma01 = sqrt(5), sigma02 = sqrt(5), mu1 = 4, mu2 = 0,
  sigma1 = 1, sigma2 = 1, r = NULL, seed = 1
)

}
